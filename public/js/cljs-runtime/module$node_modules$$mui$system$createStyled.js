shadow$provide.module$node_modules$$mui$system$createStyled=function(global,require,module,exports){function isEmpty(obj){return 0===Object.keys(obj).length}function shouldForwardProp(prop){return"ownerState"!==prop&&"theme"!==prop&&"sx"!==prop&&"as"!==prop}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0});exports.default=function(input={}){const {defaultTheme=systemDefaultTheme,rootShouldForwardProp=shouldForwardProp,
slotShouldForwardProp=shouldForwardProp}=input;return(tag,inputOptions={})=>{const {name:componentName,slot:componentSlot,skipVariantsResolver:inputSkipVariantsResolver,skipSx:inputSkipSx,overridesResolver}=inputOptions;inputOptions=(0,_objectWithoutPropertiesLoose2.default)(inputOptions,_excluded);const skipVariantsResolver=void 0!==inputSkipVariantsResolver?inputSkipVariantsResolver:componentSlot&&"Root"!==componentSlot||!1,skipSx=inputSkipSx||!1;var label;componentName&&(label=`${componentName}-${lowercaseFirstLetter(componentSlot||
"Root")}`);let shouldForwardPropOption=shouldForwardProp;"Root"===componentSlot?shouldForwardPropOption=rootShouldForwardProp:componentSlot&&(shouldForwardPropOption=slotShouldForwardProp);const defaultStyledResolver=(0,_styledEngine.default)(tag,(0,_extends2.default)({shouldForwardProp:shouldForwardPropOption,label},inputOptions));label=(styleArg,...expressions)=>{var expressionsWithDefaultTheme=expressions?expressions.map(stylesArg=>"function"===typeof stylesArg&&stylesArg.__emotion_real!==stylesArg?
_ref=>{let {theme:themeInput}=_ref;_ref=(0,_objectWithoutPropertiesLoose2.default)(_ref,_excluded2);return stylesArg((0,_extends2.default)({theme:isEmpty(themeInput)?defaultTheme:themeInput},_ref))}:stylesArg):[];let transformedStyleArg=styleArg;componentName&&overridesResolver&&expressionsWithDefaultTheme.push(props=>{var theme=isEmpty(props.theme)?defaultTheme:props.theme;theme=theme.components&&theme.components[componentName]&&theme.components[componentName].styleOverrides?theme.components[componentName].styleOverrides:
null;if(theme){const resolvedStyleOverrides={};Object.entries(theme).forEach(([slotKey,slotStyle])=>{resolvedStyleOverrides[slotKey]="function"===typeof slotStyle?slotStyle(props):slotStyle});return overridesResolver(props,resolvedStyleOverrides)}return null});componentName&&!skipVariantsResolver&&expressionsWithDefaultTheme.push(props=>{const theme=isEmpty(props.theme)?defaultTheme:props.theme;return variantsResolver(props,getVariantStyles(componentName,theme),theme,componentName)});skipSx||expressionsWithDefaultTheme.push(props=>
{const theme=isEmpty(props.theme)?defaultTheme:props.theme;return(0,_styleFunctionSx.default)((0,_extends2.default)({},props,{theme}))});expressions=expressionsWithDefaultTheme.length-expressions.length;Array.isArray(styleArg)&&0<expressions?(expressions=Array(expressions).fill(""),transformedStyleArg=[...styleArg,...expressions],transformedStyleArg.raw=[...styleArg.raw,...expressions]):"function"===typeof styleArg&&(transformedStyleArg=_ref2=>{let {theme:themeInput}=_ref2;_ref2=(0,_objectWithoutPropertiesLoose2.default)(_ref2,
_excluded3);return styleArg((0,_extends2.default)({theme:isEmpty(themeInput)?defaultTheme:themeInput},_ref2))});expressionsWithDefaultTheme=defaultStyledResolver(transformedStyleArg,...expressionsWithDefaultTheme);let displayName;componentName&&(displayName=`${componentName}${componentSlot||""}`);void 0===displayName&&(displayName=`Styled(${(0,_utils.getDisplayName)(tag)})`);expressionsWithDefaultTheme.displayName=displayName;return expressionsWithDefaultTheme};defaultStyledResolver.withConfig&&(label.withConfig=
defaultStyledResolver.withConfig);return label}};exports.shouldForwardProp=shouldForwardProp;exports.systemDefaultTheme=void 0;var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_objectWithoutPropertiesLoose2=global(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")),_styledEngine=global(require("module$node_modules$$mui$styled_engine$node$index")),_utils=require("module$node_modules$$mui$utils$index");module=global(require("module$node_modules$$mui$system$createTheme$index"));
var _styleFunctionSx=global(require("module$node_modules$$mui$system$styleFunctionSx$index")),_propsToClassKey=global(require("module$node_modules$$mui$system$propsToClassKey"));const _excluded=["name","slot","skipVariantsResolver","skipSx","overridesResolver"],_excluded2=["theme"],_excluded3=["theme"],getVariantStyles=(name,theme)=>{let variants=[];theme&&theme.components&&theme.components[name]&&theme.components[name].variants&&(variants=theme.components[name].variants);const variantsStyles={};
variants.forEach(definition=>{const key=(0,_propsToClassKey.default)(definition.props);variantsStyles[key]=definition.style});return variantsStyles},variantsResolver=(props,styles,theme,name)=>{var _theme$components,_theme$components$nam;const {ownerState={}}=props,variantsStyles=[];(theme=null==theme?void 0:null==(_theme$components=theme.components)?void 0:null==(_theme$components$nam=_theme$components[name])?void 0:_theme$components$nam.variants)&&theme.forEach(themeVariant=>{let isMatch=!0;Object.keys(themeVariant.props).forEach(key=>
{ownerState[key]!==themeVariant.props[key]&&props[key]!==themeVariant.props[key]&&(isMatch=!1)});isMatch&&variantsStyles.push(styles[(0,_propsToClassKey.default)(themeVariant.props)])});return variantsStyles},systemDefaultTheme=(0,module.default)();exports.systemDefaultTheme=systemDefaultTheme;const lowercaseFirstLetter=string=>string.charAt(0).toLowerCase()+string.slice(1)}
//# sourceMappingURL=module$node_modules$$mui$system$createStyled.js.map
