shadow$provide.module$node_modules$$mui$material$node$styles$cssUtils=function(global,process,require,module,exports,shadow$shims){function getUnit(input){return String(input).match(/[\d.\-+]*\s*(.*)/)[1]||""}Object.defineProperty(exports,"__esModule",{value:!0});exports.alignProperty=function($jscomp$destructuring$var271){var size=$jscomp$destructuring$var271.size,grid=$jscomp$destructuring$var271.grid;$jscomp$destructuring$var271=size-size%grid;grid=$jscomp$destructuring$var271+grid;return size-
$jscomp$destructuring$var271<grid-size?$jscomp$destructuring$var271:grid};exports.convertLength=function(baseFontSize){return function(length,toUnit){var fromUnit=getUnit(length);if(fromUnit===toUnit)return length;var pxLength=parseFloat(length);"px"!==fromUnit&&("em"===fromUnit?pxLength=parseFloat(length)*parseFloat(baseFontSize):"rem"===fromUnit&&(pxLength=parseFloat(length)*parseFloat(baseFontSize)));fromUnit=pxLength;if("px"!==toUnit)if("em"===toUnit)fromUnit=pxLength/parseFloat(baseFontSize);
else if("rem"===toUnit)fromUnit=pxLength/parseFloat(baseFontSize);else return length;return parseFloat(fromUnit.toFixed(5))+toUnit}};exports.fontGrid=function($jscomp$destructuring$var273){return $jscomp$destructuring$var273.pixels/($jscomp$destructuring$var273.lineHeight*$jscomp$destructuring$var273.htmlFontSize)};exports.getUnit=getUnit;exports.isUnitless=function(value){return String(parseFloat(value)).length===String(value).length};exports.responsiveProperty=function($jscomp$destructuring$var275){var cssProperty=
$jscomp$destructuring$var275.cssProperty,min=$jscomp$destructuring$var275.min,max=$jscomp$destructuring$var275.max,unit=void 0===$jscomp$destructuring$var275.unit?"rem":$jscomp$destructuring$var275.unit,breakpoints=void 0===$jscomp$destructuring$var275.breakpoints?[600,900,1200]:$jscomp$destructuring$var275.breakpoints,transform=void 0===$jscomp$destructuring$var275.transform?null:$jscomp$destructuring$var275.transform;$jscomp$destructuring$var275={};var output=($jscomp$destructuring$var275[cssProperty]=
""+min+unit,$jscomp$destructuring$var275),factor=(max-min)/breakpoints[breakpoints.length-1];breakpoints.forEach(function(breakpoint){var value=min+factor*breakpoint;null!==transform&&(value=transform(value));var $jscomp$compprop22={};output["@media (min-width:"+breakpoint+"px)"]=($jscomp$compprop22[cssProperty]=""+Math.round(1E4*value)/1E4+unit,$jscomp$compprop22)});return output};exports.toUnitless=function(length){return parseFloat(length)}}
//# sourceMappingURL=module$node_modules$$mui$material$node$styles$cssUtils.js.map
