{"version":3,"sources":["starter/core.cljs"],"mappings":";;AAYA,yBAAA,zBAAMA;AAAN,AACE,IAAMC,WAAS,AAAGC;AAAlB,AACE,oBAAID;AACF,oBAAI,AAAcA;AAChB,YAAAE,mCAAOF;;AADT;;;AADF;;;AAQJ,6BAAA,7BAAMG,kEAAeC;AAArB,AACE,IAAMC,MAAI,AAAGC,WAAc;AAA3B,AACC,YAAA,AAAA,AAAAF,sBAAA,JAAoBC;;AAIvB,mBAAA,nBAAME;AAAN,AACE,IAAMC,OAAK,gDAAA,hDAACC;IAAUL,OAAK,AAACL;IAAWW,UAAQ,6CAAA,7CAACC;IAAUC,mBAAiB,AAACT,2BAAcC;AAA1F,AACE,AACE;AAAA,AAAA,0FAAA,mDAAA,2CAAA,uDAAA,2CAAA,yDAAA,OAAA,0DAAA,OAAA,wEAAA,yBAAA,oHAAA,2CAAA,0DAAA,0DAAA,mEAAA,+GAAA,mFAAA,mDAAA,2CAAA,uDAAA,2CAAA,yDAAA,9rBAKKS,iIAAcL,0DAAWJ,gEAAcM,sFAA0BE,oYAIhE,iBAAAE,WAAA,AAAAC,gBAAOP;AAAP,AAAA,QAAAM;KAAA;AAAA,0FACKG;;;KADL;AAAA,+IAAA,2CAAA,+FAAA,mEAAA,lQAEKC,8KAAoCN,4EAA0BF,6DAAcF;;;KAFjF;AAAA,+HAAA,2CAAA,+FAAA,/KAGKW,8JAA4BP,4EAA0BF;;;;AAH3D,MAAA,KAAAM,MAAA,CAAA,mEAAAF;;;;;;AAYZ,oBAAA,pBAAMM;AAAN,AACE,mBAAA,ZAACC;;AAEH,qBAAA,rBAAMC;AAAN,AACE,YAAA,ZAACD;;AACD,yDAAA,lDAACE,qIAAUhB,yBACD,wBAAA,xBAAiBiB;;AAE7B,oBAAA,pBAAeC;AAAf,AACE,OAACH","names":["starter.core/init-web3","provider","js/window","js/module$node_modules$web3$lib$index","starter.core/init-contract","web3","abi","js/JSON","starter.core/app","step","reagent.core.atom","details","cljs.core.atom","contractInstance","starter.components.navBar/navBar","G__26907","cljs.core/deref","js/Error","starter.components.loginPage/loginPage","starter.components.registrationPage/registrationPage","starter.components.mainPage/mainPage","starter.core/stop","js/console.log","starter.core/start","reagent.core.render","js/document","starter.core/init"],"sourcesContent":["(ns starter.core\n    (:require \n      [reagent.core :as r]\n      [\"web3\" :as Web3]\n      [cljs-ipfs-api.core :as icore :refer [init-ipfs]]\n      [starter.components.mainPage :refer [mainPage]]\n      [starter.components.navBar :refer [navBar]]\n      [starter.components.loginPage :refer [loginPage]]\n      [starter.components.registrationPage :refer [registrationPage]])\n    (:require-macros\n      [starter.helpers.slurp :refer [slurp]]))\n      \n(defn init-web3 []\n  (let [provider (. js/window -ethereum)]\n    (if provider ;; check if window.ethereum has been injected\n      (if (.-isMetaMask provider) ;; check if MetaMask is the provider\n        (Web3. provider)\n        false)\n    false)\n  )\n)\n\n(defn init-contract [web3]\n  (let [abi (. js/JSON parse (slurp \"src/contract/WeJure.json\"))]\n   (web3.eth.Contract. abi \"0xDf533B05C5cC60bF9b45fDaB328f4f1BF0a2D77A\")\n  )\n)\n\n(defn app []\n  (let [step (r/atom 0) web3 (init-web3) details (atom nil) contractInstance (init-contract web3)]\n    (do \n      (fn [] \n        [:div \n          {:style {:height \"100%\"\n                    :display \"flex\"\n                    :flex-direction \"column\"}}\n          [navBar {:step step :web3 web3 :details details :contractInstance contractInstance}]\n          [:div\n            {:style {\n              :height \"100%\"}}\n            (case @step\n              0 [loginPage]\n              1 [registrationPage {:contractInstance contractInstance :details details :step step}]\n              2 [mainPage {:contractInstance contractInstance :details details}]\n            )\n          ]\n        ]\n      )\n    )\n  )\n)\n\n(defn stop []\n  (js/console.log \"Stopping...\"))\n\n(defn start []\n  (js/console.log \"Starting...\")\n  (r/render [app]\n            (.getElementById js/document \"app\")))\n\n(defn ^:export init []\n  (start))"]}