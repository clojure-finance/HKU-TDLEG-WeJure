{"version":3,"sources":["starter/components/navBar.cljs"],"mappings":"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","names":["starter.components.navBar/ipfsUrl","starter.components.navBar/loginFunction","step","web3","details","contractInstance","js/window","obj28389","arg","cljs.core.js__GT_clj","accounts","cljs.core.swap_BANG_","cljs.core/assoc","cljs.core.nth","cljs.core.println","cljs.core/deref","profile","name","profileHash","clojure.string/blank?","cljs.core/reset!","js/alert","p__28390","map__28391","cljs.core/--destructure-map","cljs.core.get","starter.components.navBar/openFormBtn","open","reagent.core.atom","reagent-mui.material.button/button","starter.components.photoForm/photoForm","p__28392","map__28393","starter.components.navBar/navBar","reagent-mui.material.app-bar/app-bar","reagent-mui.material.toolbar/toolbar","cljs.core._EQ_","cljs.core.not_EQ_","reagent-mui.material.typography/typography"],"sourcesContent":["(ns starter.components.navBar\n    (:require \n        [reagent.core :as r]\n        [reagent-mui.material.app-bar :refer [app-bar]]\n        [reagent-mui.material.toolbar :refer [toolbar]]\n        [reagent-mui.material.button :refer [button]]\n        [reagent-mui.material.typography :refer [typography]]\n        [starter.components.photoForm :refer [photoForm]]\n    )\n)\n\n(def ipfsUrl \"https://ipfs.infura.io/ipfs/\")\n\n(defn loginFunction [step web3 details contractInstance] \n  (do\n    (if web3 \n      (-> (.request (. js/window -ethereum) (js-obj \"method\" \"eth_requestAccounts\"))\n        (.then (fn [arg] (js->clj arg))) ;; convert result into clojure-accepted data type and assign it to accounts\n        (.then (fn [accounts] (do (swap! details assoc :account (nth accounts 0)) (println (str \"@trace account: \" (nth accounts 0)))))) ;; get first account\n        (.then (fn [] (set! (. js/window -temp) contractInstance)))\n        (.then (fn [] (. (. (. contractInstance -methods) profiles (:account @details)) call)))\n        (.then (fn [profile] \n                (let [name (. profile -name) profileHash ^js (. profile -picHash)]\n                  (do \n                  (println (str \"name: \" name \" profileHash: \" profileHash))\n                  (if (clojure.string/blank? name)\n                    (reset! step 1)\n                    (do (swap! details assoc :name name) (swap! details assoc :profileHash profileHash) (reset! step 2))\n                  )\n                  )\n                ))\n        )\n      )\n      (js/alert \"No provider found. Please install MetaMask.\") ;; display alert if user does not have wallet installed\n    )\n    (println 3)\n  )\n)\n\n(defn openFormBtn [{:keys [contractInstance details]}] \n  (let [open (r/atom false)]\n    (fn [] \n      [:div\n        [button\n          {:variant \"contained\"\n            :on-click #(do (reset! open true) (println (str @open)))}\n          \"Upload your photo\"]\n        [photoForm {:open open :contractInstance contractInstance :details details}]])\n  )\n)\n\n(defn navBar [{:keys [step web3 details contractInstance]}]\n  [app-bar \n      {:position \"static\"\n        :sx {:background-color \"#070707\"}}\n      [toolbar\n          [:img \n            {:src \"logo_white.png\"\n              :style {:height \"50px\" \n                      :margin \"0 20px 0 0\"}}]\n          (when (= @step 2) \n              [openFormBtn {:contractInstance contractInstance :details details}])\n          [:div\n              {:style {:flex-grow \"1\"}}]\n          (if (not= @step 0)\n              [:div\n                  {:style {:display \"flex\"\n                            :align-items \"center\"}}\n                  (if (= @step 1)     \n                    [typography \n                      {:variant \"p\"\n                        :component \"div\"\n                        :sx {:margin \"0 20px 0 0\"\n                        :font-size \"12px\"}}\n                      (:account @details)]\n                      [:div\n                        {:style {:margin \"0 20px 0 0\" :display \"flex\" :alignItems \"center\"}}\n                        [typography \n                          {:variant \"h6\"\n                            :component \"div\"\n                            :sx {:font-size \"12px\" :margin \"0 20px 0 0\"}}\n                          (:name @details)]\n                        [:img\n                            {:src (str ipfsUrl (:profileHash @details))\n                            :width 50\n                            :height 50\n                            :style {:border-radius \"50%\"}}]\n                    ]\n                  )\n                  [button\n                    {:color \"inherit\"\n                      :variant \"outlined\"\n                      :on-click #(reset! step 0)}\n                    \"Logout\"]]\n              [button \n                {:color \"inherit\"\n                  :on-click #(loginFunction step web3 details contractInstance)}\n                \"Login\"])]]\n)"]}