shadow$provide.module$node_modules$$mui$system$colorManipulator=function(global,require,module,exports){function clamp(value,min=0,max=1){(value<min||value>max)&&console.error(`MUI: The value provided ${value} is out of range [${min}, ${max}].`);return Math.min(Math.max(min,value),max)}function hexToRgb(color){color=color.substr(1);(color=color.match(new RegExp(`.{1,${6<=color.length?2:1}}`,"g")))&&1===color[0].length&&(color=color.map(n=>n+n));return color?`rgb${4===color.length?"a":""}(${color.map((n,
index)=>3>index?parseInt(n,16):Math.round(parseInt(n,16)/255*1E3)/1E3).join(", ")})`:""}function decomposeColor(color){if(color.type)return color;if("#"===color.charAt(0))return decomposeColor(hexToRgb(color));const marker=color.indexOf("("),type=color.substring(0,marker);if(-1===["rgb","rgba","hsl","hsla","color"].indexOf(type))throw Error(`MUI: Unsupported \`${color}\` color.
The following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().`);color=color.substring(marker+1,color.length-1);let colorSpace;if("color"===type){if(color=color.split(" "),colorSpace=color.shift(),4===color.length&&"/"===color[3].charAt(0)&&(color[3]=color[3].substr(1)),-1===["srgb","display-p3","a98-rgb","prophoto-rgb","rec-2020"].indexOf(colorSpace))throw Error(`MUI: unsupported \`${colorSpace}\` color space.
The following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.`);}else color=color.split(",");color=color.map(value=>parseFloat(value));return{type,values:color,colorSpace}}function recomposeColor(color){const {type,colorSpace}=color;({values:color}=color);-1!==type.indexOf("rgb")?color=color.map((n,i)=>3>i?parseInt(n,10):n):-1!==type.indexOf("hsl")&&(color[1]=`${color[1]}%`,color[2]=`${color[2]}%`);color=-1!==type.indexOf("color")?`${colorSpace} ${color.join(" ")}`:
`${color.join(", ")}`;return`${type}(${color})`}function hslToRgb(color){color=decomposeColor(color);const {values}=color,h=values[0],l=values[2]/100,a=values[1]/100*Math.min(l,1-l);var f=(n,k=(n+h/30)%12)=>l-a*Math.max(Math.min(k-3,9-k,1),-1);let type="rgb";f=[Math.round(255*f(0)),Math.round(255*f(8)),Math.round(255*f(4))];"hsla"===color.type&&(type+="a",f.push(values[3]));return recomposeColor({type,values:f})}function getLuminance(color){color=decomposeColor(color);let rgb="hsl"===color.type?decomposeColor(hslToRgb(color)).values:
color.values;rgb=rgb.map(val=>{"color"!==color.type&&(val/=255);return.03928>=val?val/12.92:Math.pow((val+.055)/1.055,2.4)});return Number((.2126*rgb[0]+.7152*rgb[1]+.0722*rgb[2]).toFixed(3))}function darken(color,coefficient){color=decomposeColor(color);coefficient=clamp(coefficient);if(-1!==color.type.indexOf("hsl"))color.values[2]*=1-coefficient;else if(-1!==color.type.indexOf("rgb")||-1!==color.type.indexOf("color"))for(let i=0;3>i;i+=1)color.values[i]*=1-coefficient;return recomposeColor(color)}
function lighten(color,coefficient){color=decomposeColor(color);coefficient=clamp(coefficient);if(-1!==color.type.indexOf("hsl"))color.values[2]+=(100-color.values[2])*coefficient;else if(-1!==color.type.indexOf("rgb"))for(var i=0;3>i;i+=1)color.values[i]+=(255-color.values[i])*coefficient;else if(-1!==color.type.indexOf("color"))for(i=0;3>i;i+=1)color.values[i]+=(1-color.values[i])*coefficient;return recomposeColor(color)}Object.defineProperty(exports,"__esModule",{value:!0});exports.alpha=function(color,
value){color=decomposeColor(color);value=clamp(value);if("rgb"===color.type||"hsl"===color.type)color.type+="a";color.values[3]="color"===color.type?`/${value}`:value;return recomposeColor(color)};exports.darken=darken;exports.decomposeColor=decomposeColor;exports.emphasize=function(color,coefficient=.15){return.5<getLuminance(color)?darken(color,coefficient):lighten(color,coefficient)};exports.getContrastRatio=function(foreground,background){foreground=getLuminance(foreground);background=getLuminance(background);
return(Math.max(foreground,background)+.05)/(Math.min(foreground,background)+.05)};exports.getLuminance=getLuminance;exports.hexToRgb=hexToRgb;exports.hslToRgb=hslToRgb;exports.lighten=lighten;exports.recomposeColor=recomposeColor;exports.rgbToHex=function(color){if(0===color.indexOf("#"))return color;({values:color}=decomposeColor(color));return`#${color.map((n,i)=>{n=(3===i?Math.round(255*n):n).toString(16);return 1===n.length?`0${n}`:n}).join("")}`};require("module$node_modules$$mui$utils$index")}
//# sourceMappingURL=module$node_modules$$mui$system$colorManipulator.js.map
