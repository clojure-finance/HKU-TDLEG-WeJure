["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/material/node/styles/createPalette.js"],"~:js","shadow$provide.module$node_modules$$mui$material$node$styles$createPalette=function(global,process,require,module,exports,shadow$shims){function addLightOrDark(intent,direction,shade,tonalOffset){var tonalOffsetLight=tonalOffset.light||tonalOffset;tonalOffset=tonalOffset.dark||1.5*tonalOffset;intent[direction]||(intent.hasOwnProperty(shade)?intent[direction]=intent[shade]:\"light\"===direction?intent.light=(0,_system.lighten)(intent.main,tonalOffsetLight):\"dark\"===direction&&(intent.dark=(0,_system.darken)(intent.main,\ntonalOffset)))}function getDefaultPrimary(mode){return\"dark\"===(void 0===mode?\"light\":mode)?{main:_blue.default[200],light:_blue.default[50],dark:_blue.default[400]}:{main:_blue.default[700],light:_blue.default[400],dark:_blue.default[800]}}function getDefaultSecondary(mode){return\"dark\"===(void 0===mode?\"light\":mode)?{main:_purple.default[200],light:_purple.default[50],dark:_purple.default[400]}:{main:_purple.default[500],light:_purple.default[300],dark:_purple.default[700]}}function getDefaultError(mode){return\"dark\"===\n(void 0===mode?\"light\":mode)?{main:_red.default[500],light:_red.default[300],dark:_red.default[700]}:{main:_red.default[700],light:_red.default[400],dark:_red.default[800]}}function getDefaultInfo(mode){return\"dark\"===(void 0===mode?\"light\":mode)?{main:_lightBlue.default[400],light:_lightBlue.default[300],dark:_lightBlue.default[700]}:{main:_lightBlue.default[700],light:_lightBlue.default[500],dark:_lightBlue.default[900]}}function getDefaultSuccess(mode){return\"dark\"===(void 0===mode?\"light\":mode)?\n{main:_green.default[400],light:_green.default[300],dark:_green.default[700]}:{main:_green.default[800],light:_green.default[500],dark:_green.default[900]}}function getDefaultWarning(mode){return\"dark\"===(void 0===mode?\"light\":mode)?{main:_orange.default[400],light:_orange.default[300],dark:_orange.default[700]}:{main:\"#ed6c02\",light:_orange.default[500],dark:_orange.default[900]}}global=require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",\n{value:!0});exports.dark=void 0;exports.default=function(palette){function getContrastText(background){var contrastText=(0,_system.getContrastRatio)(background,dark.text.primary)>=contrastThreshold?dark.text.primary:light.text.primary,contrast=(0,_system.getContrastRatio)(background,contrastText);3>contrast&&console.error([\"MUI: The contrast ratio of \"+contrast+\":1 for \"+contrastText+\" on \"+background,\"falls below the WCAG recommended absolute minimum contrast ratio of 3:1.\\nhttps://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast\"].join(\"\\n\"));\nreturn contrastText}var mode=void 0===palette.mode?\"light\":palette.mode,contrastThreshold=void 0===palette.contrastThreshold?3:palette.contrastThreshold,tonalOffset=void 0===palette.tonalOffset?.2:palette.tonalOffset,other=(0,_objectWithoutPropertiesLoose2.default)(palette,_excluded),primary=palette.primary||getDefaultPrimary(mode),secondary=palette.secondary||getDefaultSecondary(mode),error=palette.error||getDefaultError(mode),info=palette.info||getDefaultInfo(mode),success=palette.success||getDefaultSuccess(mode);\npalette=palette.warning||getDefaultWarning(mode);var augmentColor=function($jscomp$destructuring$var201){var color=$jscomp$destructuring$var201.color,name=$jscomp$destructuring$var201.name,mainShade=void 0===$jscomp$destructuring$var201.mainShade?500:$jscomp$destructuring$var201.mainShade,lightShade=void 0===$jscomp$destructuring$var201.lightShade?300:$jscomp$destructuring$var201.lightShade;$jscomp$destructuring$var201=void 0===$jscomp$destructuring$var201.darkShade?700:$jscomp$destructuring$var201.darkShade;\ncolor=(0,_extends2.default)({},color);!color.main&&color[mainShade]&&(color.main=color[mainShade]);if(!color.hasOwnProperty(\"main\"))throw Error(\"MUI: The color\"+(name?\" (\"+name+\")\":\"\")+\" provided to augmentColor(color) is invalid.\\nThe color object needs to have a `main` property or a `\"+mainShade+\"` property.\");if(\"string\"!==typeof color.main)throw Error(\"MUI: The color\"+(name?\" (\"+name+\")\":\"\")+\" provided to augmentColor(color) is invalid.\\n`color.main` should be a string, but `\"+JSON.stringify(color.main)+\n'` was provided instead.\\n\\nDid you intend to use one of the following approaches?\\n\\nimport { green } from \"@mui/material/colors\";\\n\\nconst theme1 \\x3d createTheme({ palette: {\\n  primary: green,\\n} });\\n\\nconst theme2 \\x3d createTheme({ palette: {\\n  primary: { main: green[500] },\\n} });');addLightOrDark(color,\"light\",lightShade,tonalOffset);addLightOrDark(color,\"dark\",$jscomp$destructuring$var201,tonalOffset);color.contrastText||(color.contrastText=getContrastText(color.main));return color},modes=\n{dark:dark,light:light};modes[mode]||console.error(\"MUI: The palette mode `\"+mode+\"` is not supported.\");return(0,_utils.deepmerge)((0,_extends2.default)({common:_common.default,mode:mode,primary:augmentColor({color:primary,name:\"primary\"}),secondary:augmentColor({color:secondary,name:\"secondary\",mainShade:\"A400\",lightShade:\"A200\",darkShade:\"A700\"}),error:augmentColor({color:error,name:\"error\"}),warning:augmentColor({color:palette,name:\"warning\"}),info:augmentColor({color:info,name:\"info\"}),success:augmentColor({color:success,\nname:\"success\"}),grey:_grey.default,contrastThreshold:contrastThreshold,getContrastText:getContrastText,augmentColor:augmentColor,tonalOffset:tonalOffset},modes[mode]),other)};exports.light=void 0;var _extends2=global(require(\"module$node_modules$$babel$runtime$helpers$extends\")),_objectWithoutPropertiesLoose2=global(require(\"module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose\")),_utils=require(\"module$node_modules$$mui$utils$index\"),_system=require(\"module$node_modules$$mui$system$index\"),\n_common=global(require(\"module$node_modules$$mui$material$node$colors$common\")),_grey=global(require(\"module$node_modules$$mui$material$node$colors$grey\")),_purple=global(require(\"module$node_modules$$mui$material$node$colors$purple\")),_red=global(require(\"module$node_modules$$mui$material$node$colors$red\")),_orange=global(require(\"module$node_modules$$mui$material$node$colors$orange\")),_blue=global(require(\"module$node_modules$$mui$material$node$colors$blue\")),_lightBlue=global(require(\"module$node_modules$$mui$material$node$colors$lightBlue\")),\n_green=global(require(\"module$node_modules$$mui$material$node$colors$green\")),_excluded=[\"mode\",\"contrastThreshold\",\"tonalOffset\"],light={text:{primary:\"rgba(0, 0, 0, 0.87)\",secondary:\"rgba(0, 0, 0, 0.6)\",disabled:\"rgba(0, 0, 0, 0.38)\"},divider:\"rgba(0, 0, 0, 0.12)\",background:{paper:_common.default.white,default:_common.default.white},action:{active:\"rgba(0, 0, 0, 0.54)\",hover:\"rgba(0, 0, 0, 0.04)\",hoverOpacity:.04,selected:\"rgba(0, 0, 0, 0.08)\",selectedOpacity:.08,disabled:\"rgba(0, 0, 0, 0.26)\",\ndisabledBackground:\"rgba(0, 0, 0, 0.12)\",disabledOpacity:.38,focus:\"rgba(0, 0, 0, 0.12)\",focusOpacity:.12,activatedOpacity:.12}};exports.light=light;var dark={text:{primary:_common.default.white,secondary:\"rgba(255, 255, 255, 0.7)\",disabled:\"rgba(255, 255, 255, 0.5)\",icon:\"rgba(255, 255, 255, 0.5)\"},divider:\"rgba(255, 255, 255, 0.12)\",background:{paper:\"#121212\",default:\"#121212\"},action:{active:_common.default.white,hover:\"rgba(255, 255, 255, 0.08)\",hoverOpacity:.08,selected:\"rgba(255, 255, 255, 0.16)\",\nselectedOpacity:.16,disabled:\"rgba(255, 255, 255, 0.3)\",disabledBackground:\"rgba(255, 255, 255, 0.12)\",disabledOpacity:.38,focus:\"rgba(255, 255, 255, 0.12)\",focusOpacity:.12,activatedOpacity:.24}};exports.dark=dark}","~:source","shadow$provide[\"module$node_modules$$mui$material$node$styles$createPalette\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dark = void 0;\nexports.default = createPalette;\nexports.light = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar _system = require(\"@mui/system\");\n\nvar _common = _interopRequireDefault(require(\"../colors/common\"));\n\nvar _grey = _interopRequireDefault(require(\"../colors/grey\"));\n\nvar _purple = _interopRequireDefault(require(\"../colors/purple\"));\n\nvar _red = _interopRequireDefault(require(\"../colors/red\"));\n\nvar _orange = _interopRequireDefault(require(\"../colors/orange\"));\n\nvar _blue = _interopRequireDefault(require(\"../colors/blue\"));\n\nvar _lightBlue = _interopRequireDefault(require(\"../colors/lightBlue\"));\n\nvar _green = _interopRequireDefault(require(\"../colors/green\"));\n\nconst _excluded = [\"mode\", \"contrastThreshold\", \"tonalOffset\"];\nconst light = {\n  // The colors used to style the text.\n  text: {\n    // The most important text.\n    primary: 'rgba(0, 0, 0, 0.87)',\n    // Secondary text.\n    secondary: 'rgba(0, 0, 0, 0.6)',\n    // Disabled text have even lower visual prominence.\n    disabled: 'rgba(0, 0, 0, 0.38)'\n  },\n  // The color used to divide different elements.\n  divider: 'rgba(0, 0, 0, 0.12)',\n  // The background colors used to style the surfaces.\n  // Consistency between these values is important.\n  background: {\n    paper: _common.default.white,\n    default: _common.default.white\n  },\n  // The colors used to style the action elements.\n  action: {\n    // The color of an active action like an icon button.\n    active: 'rgba(0, 0, 0, 0.54)',\n    // The color of an hovered action.\n    hover: 'rgba(0, 0, 0, 0.04)',\n    hoverOpacity: 0.04,\n    // The color of a selected action.\n    selected: 'rgba(0, 0, 0, 0.08)',\n    selectedOpacity: 0.08,\n    // The color of a disabled action.\n    disabled: 'rgba(0, 0, 0, 0.26)',\n    // The background color of a disabled action.\n    disabledBackground: 'rgba(0, 0, 0, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(0, 0, 0, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.12\n  }\n};\nexports.light = light;\nconst dark = {\n  text: {\n    primary: _common.default.white,\n    secondary: 'rgba(255, 255, 255, 0.7)',\n    disabled: 'rgba(255, 255, 255, 0.5)',\n    icon: 'rgba(255, 255, 255, 0.5)'\n  },\n  divider: 'rgba(255, 255, 255, 0.12)',\n  background: {\n    paper: '#121212',\n    default: '#121212'\n  },\n  action: {\n    active: _common.default.white,\n    hover: 'rgba(255, 255, 255, 0.08)',\n    hoverOpacity: 0.08,\n    selected: 'rgba(255, 255, 255, 0.16)',\n    selectedOpacity: 0.16,\n    disabled: 'rgba(255, 255, 255, 0.3)',\n    disabledBackground: 'rgba(255, 255, 255, 0.12)',\n    disabledOpacity: 0.38,\n    focus: 'rgba(255, 255, 255, 0.12)',\n    focusOpacity: 0.12,\n    activatedOpacity: 0.24\n  }\n};\nexports.dark = dark;\n\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\n  const tonalOffsetLight = tonalOffset.light || tonalOffset;\n  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;\n\n  if (!intent[direction]) {\n    if (intent.hasOwnProperty(shade)) {\n      intent[direction] = intent[shade];\n    } else if (direction === 'light') {\n      intent.light = (0, _system.lighten)(intent.main, tonalOffsetLight);\n    } else if (direction === 'dark') {\n      intent.dark = (0, _system.darken)(intent.main, tonalOffsetDark);\n    }\n  }\n}\n\nfunction getDefaultPrimary(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: _blue.default[200],\n      light: _blue.default[50],\n      dark: _blue.default[400]\n    };\n  }\n\n  return {\n    main: _blue.default[700],\n    light: _blue.default[400],\n    dark: _blue.default[800]\n  };\n}\n\nfunction getDefaultSecondary(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: _purple.default[200],\n      light: _purple.default[50],\n      dark: _purple.default[400]\n    };\n  }\n\n  return {\n    main: _purple.default[500],\n    light: _purple.default[300],\n    dark: _purple.default[700]\n  };\n}\n\nfunction getDefaultError(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: _red.default[500],\n      light: _red.default[300],\n      dark: _red.default[700]\n    };\n  }\n\n  return {\n    main: _red.default[700],\n    light: _red.default[400],\n    dark: _red.default[800]\n  };\n}\n\nfunction getDefaultInfo(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: _lightBlue.default[400],\n      light: _lightBlue.default[300],\n      dark: _lightBlue.default[700]\n    };\n  }\n\n  return {\n    main: _lightBlue.default[700],\n    light: _lightBlue.default[500],\n    dark: _lightBlue.default[900]\n  };\n}\n\nfunction getDefaultSuccess(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: _green.default[400],\n      light: _green.default[300],\n      dark: _green.default[700]\n    };\n  }\n\n  return {\n    main: _green.default[800],\n    light: _green.default[500],\n    dark: _green.default[900]\n  };\n}\n\nfunction getDefaultWarning(mode = 'light') {\n  if (mode === 'dark') {\n    return {\n      main: _orange.default[400],\n      light: _orange.default[300],\n      dark: _orange.default[700]\n    };\n  }\n\n  return {\n    main: '#ed6c02',\n    // closest to orange[800] that pass 3:1.\n    light: _orange.default[500],\n    dark: _orange.default[900]\n  };\n}\n\nfunction createPalette(palette) {\n  const {\n    mode = 'light',\n    contrastThreshold = 3,\n    tonalOffset = 0.2\n  } = palette,\n        other = (0, _objectWithoutPropertiesLoose2.default)(palette, _excluded);\n  const primary = palette.primary || getDefaultPrimary(mode);\n  const secondary = palette.secondary || getDefaultSecondary(mode);\n  const error = palette.error || getDefaultError(mode);\n  const info = palette.info || getDefaultInfo(mode);\n  const success = palette.success || getDefaultSuccess(mode);\n  const warning = palette.warning || getDefaultWarning(mode); // Use the same logic as\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\n\n  function getContrastText(background) {\n    const contrastText = (0, _system.getContrastRatio)(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\n\n    if (process.env.NODE_ENV !== 'production') {\n      const contrast = (0, _system.getContrastRatio)(background, contrastText);\n\n      if (contrast < 3) {\n        console.error([`MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n      }\n    }\n\n    return contrastText;\n  }\n\n  const augmentColor = ({\n    color,\n    name,\n    mainShade = 500,\n    lightShade = 300,\n    darkShade = 700\n  }) => {\n    color = (0, _extends2.default)({}, color);\n\n    if (!color.main && color[mainShade]) {\n      color.main = color[mainShade];\n    }\n\n    if (!color.hasOwnProperty('main')) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\nThe color object needs to have a \\`main\\` property or a \\`${mainShade}\\` property.` : (0, _utils.formatMuiErrorMessage)(11, name ? ` (${name})` : '', mainShade));\n    }\n\n    if (typeof color.main !== 'string') {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\n\\`color.main\\` should be a string, but \\`${JSON.stringify(color.main)}\\` was provided instead.\n\nDid you intend to use one of the following approaches?\n\nimport { green } from \"@mui/material/colors\";\n\nconst theme1 = createTheme({ palette: {\n  primary: green,\n} });\n\nconst theme2 = createTheme({ palette: {\n  primary: { main: green[500] },\n} });` : (0, _utils.formatMuiErrorMessage)(12, name ? ` (${name})` : '', JSON.stringify(color.main)));\n    }\n\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\n\n    if (!color.contrastText) {\n      color.contrastText = getContrastText(color.main);\n    }\n\n    return color;\n  };\n\n  const modes = {\n    dark,\n    light\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!modes[mode]) {\n      console.error(`MUI: The palette mode \\`${mode}\\` is not supported.`);\n    }\n  }\n\n  const paletteOutput = (0, _utils.deepmerge)((0, _extends2.default)({\n    // A collection of common colors.\n    common: _common.default,\n    // The palette mode, can be light or dark.\n    mode,\n    // The colors used to represent primary interface elements for a user.\n    primary: augmentColor({\n      color: primary,\n      name: 'primary'\n    }),\n    // The colors used to represent secondary interface elements for a user.\n    secondary: augmentColor({\n      color: secondary,\n      name: 'secondary',\n      mainShade: 'A400',\n      lightShade: 'A200',\n      darkShade: 'A700'\n    }),\n    // The colors used to represent interface elements that the user should be made aware of.\n    error: augmentColor({\n      color: error,\n      name: 'error'\n    }),\n    // The colors used to represent potentially dangerous actions or important messages.\n    warning: augmentColor({\n      color: warning,\n      name: 'warning'\n    }),\n    // The colors used to present information to the user that is neutral and not necessarily important.\n    info: augmentColor({\n      color: info,\n      name: 'info'\n    }),\n    // The colors used to indicate the successful completion of an action that user triggered.\n    success: augmentColor({\n      color: success,\n      name: 'success'\n    }),\n    // The grey colors.\n    grey: _grey.default,\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold,\n    // Takes a background color and returns the text color that maximizes the contrast.\n    getContrastText,\n    // Generate a rich color object.\n    augmentColor,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset\n  }, modes[mode]), other);\n  return paletteOutput;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose","~$module$node_modules$$mui$material$node$colors$common","~$module$node_modules$$mui$utils$index","~$module$node_modules$$mui$material$node$colors$grey","~$module$node_modules$$mui$material$node$colors$orange","~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$module$node_modules$$mui$material$node$colors$blue","~$shadow.js","~$module$node_modules$$mui$material$node$colors$purple","~$module$node_modules$$mui$system$index","~$module$node_modules$$babel$runtime$helpers$extends","~$module$node_modules$$mui$material$node$colors$red","~$module$node_modules$$mui$material$node$colors$lightBlue","~$module$node_modules$$mui$material$node$colors$green"]],"~:properties",["^5",["success","mainShade","light","selected","augmentColor","disabledOpacity","paper","warning","activatedOpacity","grey","divider","focus","__esModule","secondary","info","error","contrastThreshold","mode","name","getContrastText","main","value","tonalOffset","darkShade","primary","text","action","contrastText","dark","selectedOpacity","focusOpacity","lightShade","active","hover","disabled","background","hoverOpacity","disabledBackground","color","default","common","icon"]],"~:compiled-at",1643014033819,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$material$node$styles$createPalette.js\",\n\"lineCount\":15,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@mui/material/node/styles/createPalette.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$material$node$styles$createPalette\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.dark = void 0;\\nexports.default = createPalette;\\nexports.light = void 0;\\n\\nvar _extends2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/extends\\\"));\\n\\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/objectWithoutPropertiesLoose\\\"));\\n\\nvar _utils = require(\\\"@mui/utils\\\");\\n\\nvar _system = require(\\\"@mui/system\\\");\\n\\nvar _common = _interopRequireDefault(require(\\\"../colors/common\\\"));\\n\\nvar _grey = _interopRequireDefault(require(\\\"../colors/grey\\\"));\\n\\nvar _purple = _interopRequireDefault(require(\\\"../colors/purple\\\"));\\n\\nvar _red = _interopRequireDefault(require(\\\"../colors/red\\\"));\\n\\nvar _orange = _interopRequireDefault(require(\\\"../colors/orange\\\"));\\n\\nvar _blue = _interopRequireDefault(require(\\\"../colors/blue\\\"));\\n\\nvar _lightBlue = _interopRequireDefault(require(\\\"../colors/lightBlue\\\"));\\n\\nvar _green = _interopRequireDefault(require(\\\"../colors/green\\\"));\\n\\nconst _excluded = [\\\"mode\\\", \\\"contrastThreshold\\\", \\\"tonalOffset\\\"];\\nconst light = {\\n  // The colors used to style the text.\\n  text: {\\n    // The most important text.\\n    primary: 'rgba(0, 0, 0, 0.87)',\\n    // Secondary text.\\n    secondary: 'rgba(0, 0, 0, 0.6)',\\n    // Disabled text have even lower visual prominence.\\n    disabled: 'rgba(0, 0, 0, 0.38)'\\n  },\\n  // The color used to divide different elements.\\n  divider: 'rgba(0, 0, 0, 0.12)',\\n  // The background colors used to style the surfaces.\\n  // Consistency between these values is important.\\n  background: {\\n    paper: _common.default.white,\\n    default: _common.default.white\\n  },\\n  // The colors used to style the action elements.\\n  action: {\\n    // The color of an active action like an icon button.\\n    active: 'rgba(0, 0, 0, 0.54)',\\n    // The color of an hovered action.\\n    hover: 'rgba(0, 0, 0, 0.04)',\\n    hoverOpacity: 0.04,\\n    // The color of a selected action.\\n    selected: 'rgba(0, 0, 0, 0.08)',\\n    selectedOpacity: 0.08,\\n    // The color of a disabled action.\\n    disabled: 'rgba(0, 0, 0, 0.26)',\\n    // The background color of a disabled action.\\n    disabledBackground: 'rgba(0, 0, 0, 0.12)',\\n    disabledOpacity: 0.38,\\n    focus: 'rgba(0, 0, 0, 0.12)',\\n    focusOpacity: 0.12,\\n    activatedOpacity: 0.12\\n  }\\n};\\nexports.light = light;\\nconst dark = {\\n  text: {\\n    primary: _common.default.white,\\n    secondary: 'rgba(255, 255, 255, 0.7)',\\n    disabled: 'rgba(255, 255, 255, 0.5)',\\n    icon: 'rgba(255, 255, 255, 0.5)'\\n  },\\n  divider: 'rgba(255, 255, 255, 0.12)',\\n  background: {\\n    paper: '#121212',\\n    default: '#121212'\\n  },\\n  action: {\\n    active: _common.default.white,\\n    hover: 'rgba(255, 255, 255, 0.08)',\\n    hoverOpacity: 0.08,\\n    selected: 'rgba(255, 255, 255, 0.16)',\\n    selectedOpacity: 0.16,\\n    disabled: 'rgba(255, 255, 255, 0.3)',\\n    disabledBackground: 'rgba(255, 255, 255, 0.12)',\\n    disabledOpacity: 0.38,\\n    focus: 'rgba(255, 255, 255, 0.12)',\\n    focusOpacity: 0.12,\\n    activatedOpacity: 0.24\\n  }\\n};\\nexports.dark = dark;\\n\\nfunction addLightOrDark(intent, direction, shade, tonalOffset) {\\n  const tonalOffsetLight = tonalOffset.light || tonalOffset;\\n  const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;\\n\\n  if (!intent[direction]) {\\n    if (intent.hasOwnProperty(shade)) {\\n      intent[direction] = intent[shade];\\n    } else if (direction === 'light') {\\n      intent.light = (0, _system.lighten)(intent.main, tonalOffsetLight);\\n    } else if (direction === 'dark') {\\n      intent.dark = (0, _system.darken)(intent.main, tonalOffsetDark);\\n    }\\n  }\\n}\\n\\nfunction getDefaultPrimary(mode = 'light') {\\n  if (mode === 'dark') {\\n    return {\\n      main: _blue.default[200],\\n      light: _blue.default[50],\\n      dark: _blue.default[400]\\n    };\\n  }\\n\\n  return {\\n    main: _blue.default[700],\\n    light: _blue.default[400],\\n    dark: _blue.default[800]\\n  };\\n}\\n\\nfunction getDefaultSecondary(mode = 'light') {\\n  if (mode === 'dark') {\\n    return {\\n      main: _purple.default[200],\\n      light: _purple.default[50],\\n      dark: _purple.default[400]\\n    };\\n  }\\n\\n  return {\\n    main: _purple.default[500],\\n    light: _purple.default[300],\\n    dark: _purple.default[700]\\n  };\\n}\\n\\nfunction getDefaultError(mode = 'light') {\\n  if (mode === 'dark') {\\n    return {\\n      main: _red.default[500],\\n      light: _red.default[300],\\n      dark: _red.default[700]\\n    };\\n  }\\n\\n  return {\\n    main: _red.default[700],\\n    light: _red.default[400],\\n    dark: _red.default[800]\\n  };\\n}\\n\\nfunction getDefaultInfo(mode = 'light') {\\n  if (mode === 'dark') {\\n    return {\\n      main: _lightBlue.default[400],\\n      light: _lightBlue.default[300],\\n      dark: _lightBlue.default[700]\\n    };\\n  }\\n\\n  return {\\n    main: _lightBlue.default[700],\\n    light: _lightBlue.default[500],\\n    dark: _lightBlue.default[900]\\n  };\\n}\\n\\nfunction getDefaultSuccess(mode = 'light') {\\n  if (mode === 'dark') {\\n    return {\\n      main: _green.default[400],\\n      light: _green.default[300],\\n      dark: _green.default[700]\\n    };\\n  }\\n\\n  return {\\n    main: _green.default[800],\\n    light: _green.default[500],\\n    dark: _green.default[900]\\n  };\\n}\\n\\nfunction getDefaultWarning(mode = 'light') {\\n  if (mode === 'dark') {\\n    return {\\n      main: _orange.default[400],\\n      light: _orange.default[300],\\n      dark: _orange.default[700]\\n    };\\n  }\\n\\n  return {\\n    main: '#ed6c02',\\n    // closest to orange[800] that pass 3:1.\\n    light: _orange.default[500],\\n    dark: _orange.default[900]\\n  };\\n}\\n\\nfunction createPalette(palette) {\\n  const {\\n    mode = 'light',\\n    contrastThreshold = 3,\\n    tonalOffset = 0.2\\n  } = palette,\\n        other = (0, _objectWithoutPropertiesLoose2.default)(palette, _excluded);\\n  const primary = palette.primary || getDefaultPrimary(mode);\\n  const secondary = palette.secondary || getDefaultSecondary(mode);\\n  const error = palette.error || getDefaultError(mode);\\n  const info = palette.info || getDefaultInfo(mode);\\n  const success = palette.success || getDefaultSuccess(mode);\\n  const warning = palette.warning || getDefaultWarning(mode); // Use the same logic as\\n  // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59\\n  // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54\\n\\n  function getContrastText(background) {\\n    const contrastText = (0, _system.getContrastRatio)(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;\\n\\n    if (process.env.NODE_ENV !== 'production') {\\n      const contrast = (0, _system.getContrastRatio)(background, contrastText);\\n\\n      if (contrast < 3) {\\n        console.error([`MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`, 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\\\n'));\\n      }\\n    }\\n\\n    return contrastText;\\n  }\\n\\n  const augmentColor = ({\\n    color,\\n    name,\\n    mainShade = 500,\\n    lightShade = 300,\\n    darkShade = 700\\n  }) => {\\n    color = (0, _extends2.default)({}, color);\\n\\n    if (!color.main && color[mainShade]) {\\n      color.main = color[mainShade];\\n    }\\n\\n    if (!color.hasOwnProperty('main')) {\\n      throw new Error(process.env.NODE_ENV !== \\\"production\\\" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\\nThe color object needs to have a \\\\`main\\\\` property or a \\\\`${mainShade}\\\\` property.` : (0, _utils.formatMuiErrorMessage)(11, name ? ` (${name})` : '', mainShade));\\n    }\\n\\n    if (typeof color.main !== 'string') {\\n      throw new Error(process.env.NODE_ENV !== \\\"production\\\" ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.\\n\\\\`color.main\\\\` should be a string, but \\\\`${JSON.stringify(color.main)}\\\\` was provided instead.\\n\\nDid you intend to use one of the following approaches?\\n\\nimport { green } from \\\"@mui/material/colors\\\";\\n\\nconst theme1 = createTheme({ palette: {\\n  primary: green,\\n} });\\n\\nconst theme2 = createTheme({ palette: {\\n  primary: { main: green[500] },\\n} });` : (0, _utils.formatMuiErrorMessage)(12, name ? ` (${name})` : '', JSON.stringify(color.main)));\\n    }\\n\\n    addLightOrDark(color, 'light', lightShade, tonalOffset);\\n    addLightOrDark(color, 'dark', darkShade, tonalOffset);\\n\\n    if (!color.contrastText) {\\n      color.contrastText = getContrastText(color.main);\\n    }\\n\\n    return color;\\n  };\\n\\n  const modes = {\\n    dark,\\n    light\\n  };\\n\\n  if (process.env.NODE_ENV !== 'production') {\\n    if (!modes[mode]) {\\n      console.error(`MUI: The palette mode \\\\`${mode}\\\\` is not supported.`);\\n    }\\n  }\\n\\n  const paletteOutput = (0, _utils.deepmerge)((0, _extends2.default)({\\n    // A collection of common colors.\\n    common: _common.default,\\n    // The palette mode, can be light or dark.\\n    mode,\\n    // The colors used to represent primary interface elements for a user.\\n    primary: augmentColor({\\n      color: primary,\\n      name: 'primary'\\n    }),\\n    // The colors used to represent secondary interface elements for a user.\\n    secondary: augmentColor({\\n      color: secondary,\\n      name: 'secondary',\\n      mainShade: 'A400',\\n      lightShade: 'A200',\\n      darkShade: 'A700'\\n    }),\\n    // The colors used to represent interface elements that the user should be made aware of.\\n    error: augmentColor({\\n      color: error,\\n      name: 'error'\\n    }),\\n    // The colors used to represent potentially dangerous actions or important messages.\\n    warning: augmentColor({\\n      color: warning,\\n      name: 'warning'\\n    }),\\n    // The colors used to present information to the user that is neutral and not necessarily important.\\n    info: augmentColor({\\n      color: info,\\n      name: 'info'\\n    }),\\n    // The colors used to indicate the successful completion of an action that user triggered.\\n    success: augmentColor({\\n      color: success,\\n      name: 'success'\\n    }),\\n    // The grey colors.\\n    grey: _grey.default,\\n    // Used by `getContrastText()` to maximize the contrast between\\n    // the background and the text.\\n    contrastThreshold,\\n    // Takes a background color and returns the text color that maximizes the contrast.\\n    getContrastText,\\n    // Generate a rich color object.\\n    augmentColor,\\n    // Used by the functions below to shift a color's luminance by approximately\\n    // two indexes within its tonal palette.\\n    // E.g., shift from Red 500 to Red 300 or Red 700.\\n    tonalOffset\\n  }, modes[mode]), other);\\n  return paletteOutput;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"addLightOrDark\",\"intent\",\"direction\",\"shade\",\"tonalOffset\",\"tonalOffsetLight\",\"light\",\"tonalOffsetDark\",\"dark\",\"hasOwnProperty\",\"_system\",\"lighten\",\"main\",\"darken\",\"getDefaultPrimary\",\"mode\",\"_blue\",\"default\",\"getDefaultSecondary\",\"_purple\",\"getDefaultError\",\"_red\",\"getDefaultInfo\",\"_lightBlue\",\"getDefaultSuccess\",\"_green\",\"getDefaultWarning\",\"_orange\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"value\",\"createPalette\",\"palette\",\"getContrastText\",\"background\",\"contrastText\",\"getContrastRatio\",\"text\",\"primary\",\"contrastThreshold\",\"contrast\",\"console\",\"error\",\"join\",\"other\",\"_objectWithoutPropertiesLoose2\",\"_excluded\",\"secondary\",\"info\",\"success\",\"warning\",\"augmentColor\",\"color\",\"name\",\"mainShade\",\"lightShade\",\"darkShade\",\"_extends2\",\"Error\",\"JSON\",\"stringify\",\"modes\",\"paletteOutput\",\"_utils\",\"deepmerge\",\"common\",\"_common\",\"grey\",\"_grey\",\"disabled\",\"divider\",\"paper\",\"white\",\"action\",\"active\",\"hover\",\"hoverOpacity\",\"selected\",\"selectedOpacity\",\"disabledBackground\",\"disabledOpacity\",\"focus\",\"focusOpacity\",\"activatedOpacity\",\"icon\"]\n}\n"]