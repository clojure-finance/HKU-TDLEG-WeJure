["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/is-typed-array/index.js"],"~:js","shadow$provide.module$node_modules$is_typed_array$index=function(global,require,module,exports){var forEach=require(\"module$node_modules$foreach$index\");exports=require(\"module$node_modules$available_typed_arrays$index\");var callBound=require(\"module$node_modules$call_bind$callBound\"),$toString=callBound(\"Object.prototype.toString\"),hasToStringTag=require(\"module$node_modules$has_tostringtag$shams\")(),g=\"undefined\"===typeof globalThis?global:globalThis,typedArrays=exports(),$indexOf=callBound(\"Array.prototype.indexOf\",\n!0)||function(array,value){for(var i=0;i<array.length;i+=1)if(array[i]===value)return i;return-1},$slice=callBound(\"String.prototype.slice\"),toStrTags={},gOPD=require(\"module$node_modules$es_abstract$helpers$getOwnPropertyDescriptor\"),getPrototypeOf=Object.getPrototypeOf;hasToStringTag&&gOPD&&getPrototypeOf&&forEach(typedArrays,function(typedArray){var arr=new g[typedArray];if(Symbol.toStringTag in arr){arr=getPrototypeOf(arr);var descriptor=gOPD(arr,Symbol.toStringTag);descriptor||(arr=getPrototypeOf(arr),\ndescriptor=gOPD(arr,Symbol.toStringTag));toStrTags[typedArray]=descriptor.get}});var tryTypedArrays=function(value){var anyTrue=!1;forEach(toStrTags,function(getter,typedArray){if(!anyTrue)try{anyTrue=getter.call(value)===typedArray}catch(e){}});return anyTrue};module.exports=function(value){return value&&\"object\"===typeof value?hasToStringTag&&Symbol.toStringTag in value?gOPD?tryTypedArrays(value):!1:(value=$slice($toString(value),8,-1),-1<$indexOf(typedArrays,value)):!1}}","~:source","shadow$provide[\"module$node_modules$is_typed_array$index\"] = function(global,require,module,exports) {\n'use strict';\n\nvar forEach = require('foreach');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$es_abstract$helpers$getOwnPropertyDescriptor","~$module$node_modules$call_bind$callBound","~$module$node_modules$has_tostringtag$shams","~$shadow.js","~$module$node_modules$foreach$index","~$module$node_modules$available_typed_arrays$index"]],"~:properties",["^5",[]],"~:compiled-at",1644840879649,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$is_typed_array$index.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrG,IAAIC,QAAUH,OAAA,CAAQ,mCAAR,CACVI,QAAAA,CAAuBJ,OAAA,CAAQ,kDAAR,CAC3B,KAAIK,UAAYL,OAAA,CAAQ,yCAAR,CAAhB,CAEIM,UAAYD,SAAA,CAAU,2BAAV,CAFhB,CAGIE,eAAiBP,OAAA,CAAQ,2CAAR,CAAA,EAHrB,CAKIQ,EAA0B,WAAtB,GAAA,MAAOC,WAAP,CAAoCV,MAApC,CAA6CU,UALrD,CAMIC,YAAcN,OAAA,EANlB,CAQIO,SAAWN,SAAA,CAAU,yBAAV;AAAqC,CAAA,CAArC,CAAXM,EAAyDC,QAAgB,CAACC,KAAD,CAAQC,KAAR,CAAe,CAC3F,IAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBF,KAAMG,CAAAA,MAA1B,CAAkCD,CAAlC,EAAuC,CAAvC,CACC,GAAIF,KAAA,CAAME,CAAN,CAAJ,GAAiBD,KAAjB,CACC,MAAOC,EAGT,OAAO,CAAC,CANmF,CAR5F,CAgBIE,OAASZ,SAAA,CAAU,wBAAV,CAhBb,CAiBIa,UAAY,EAjBhB,CAkBIC,KAAOnB,OAAA,CAAQ,kEAAR,CAlBX,CAmBIoB,eAAiBC,MAAOD,CAAAA,cACxBb,eAAJ,EAAsBY,IAAtB,EAA8BC,cAA9B,EACCjB,OAAA,CAAQO,WAAR,CAAqB,QAAS,CAACY,UAAD,CAAa,CAC1C,IAAIC,IAAM,IAAIf,CAAA,CAAEc,UAAF,CACd,IAAIE,MAAOC,CAAAA,WAAX,GAA0BF,IAA1B,CAA+B,CAC1BG,GAAAA,CAAQN,cAAA,CAAeG,GAAf,CACZ,KAAII,WAAaR,IAAA,CAAKO,GAAL,CAAYF,MAAOC,CAAAA,WAAnB,CACZE,WAAL,GACKC,GACJ,CADiBR,cAAA,CAAeM,GAAf,CACjB;AAAAC,UAAA,CAAaR,IAAA,CAAKS,GAAL,CAAiBJ,MAAOC,CAAAA,WAAxB,CAFd,CAIAP,UAAA,CAAUI,UAAV,CAAA,CAAwBK,UAAWE,CAAAA,GAPL,CAFW,CAA3C,CAcD,KAAIC,eAAiBA,QAA0B,CAAChB,KAAD,CAAQ,CACtD,IAAIiB,QAAU,CAAA,CACd5B,QAAA,CAAQe,SAAR,CAAmB,QAAS,CAACc,MAAD,CAASV,UAAT,CAAqB,CAChD,GAAI,CAACS,OAAL,CACC,GAAI,CACHA,OAAA,CAAUC,MAAOC,CAAAA,IAAP,CAAYnB,KAAZ,CAAV,GAAiCQ,UAD9B,CAEF,MAAOY,CAAP,CAAU,EAJmC,CAAjD,CAOA,OAAOH,QAT+C,CAYvD9B,OAAOC,CAAAA,OAAP,CAAiBiC,QAAqB,CAACrB,KAAD,CAAQ,CAC7C,MAAKA,MAAL,EAA+B,QAA/B,GAAc,MAAOA,MAArB,CACKP,cAAL,EAAyBiB,MAAOC,CAAAA,WAAhC,GAA+CX,MAA/C,CAIKK,IAAL,CACOW,cAAA,CAAehB,KAAf,CADP,CAAoB,CAAA,CAJpB,EACKsB,KACG,CADGnB,MAAA,CAAOX,SAAA,CAAUQ,KAAV,CAAP,CAAyB,CAAzB,CAA4B,CAAC,CAA7B,CACH,CAA6B,CAAC,CAA9B,CAAAH,QAAA,CAASD,WAAT,CAAsB0B,KAAtB,CAFR,CADA,CAAkD,CAAA,CADL,CApDuD;\",\n\"sources\":[\"node_modules/is-typed-array/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$is_typed_array$index\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nvar forEach = require('foreach');\\nvar availableTypedArrays = require('available-typed-arrays');\\nvar callBound = require('call-bind/callBound');\\n\\nvar $toString = callBound('Object.prototype.toString');\\nvar hasToStringTag = require('has-tostringtag/shams')();\\n\\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\\nvar typedArrays = availableTypedArrays();\\n\\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\\n\\tfor (var i = 0; i < array.length; i += 1) {\\n\\t\\tif (array[i] === value) {\\n\\t\\t\\treturn i;\\n\\t\\t}\\n\\t}\\n\\treturn -1;\\n};\\nvar $slice = callBound('String.prototype.slice');\\nvar toStrTags = {};\\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\\nif (hasToStringTag && gOPD && getPrototypeOf) {\\n\\tforEach(typedArrays, function (typedArray) {\\n\\t\\tvar arr = new g[typedArray]();\\n\\t\\tif (Symbol.toStringTag in arr) {\\n\\t\\t\\tvar proto = getPrototypeOf(arr);\\n\\t\\t\\tvar descriptor = gOPD(proto, Symbol.toStringTag);\\n\\t\\t\\tif (!descriptor) {\\n\\t\\t\\t\\tvar superProto = getPrototypeOf(proto);\\n\\t\\t\\t\\tdescriptor = gOPD(superProto, Symbol.toStringTag);\\n\\t\\t\\t}\\n\\t\\t\\ttoStrTags[typedArray] = descriptor.get;\\n\\t\\t}\\n\\t});\\n}\\n\\nvar tryTypedArrays = function tryAllTypedArrays(value) {\\n\\tvar anyTrue = false;\\n\\tforEach(toStrTags, function (getter, typedArray) {\\n\\t\\tif (!anyTrue) {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tanyTrue = getter.call(value) === typedArray;\\n\\t\\t\\t} catch (e) { /**/ }\\n\\t\\t}\\n\\t});\\n\\treturn anyTrue;\\n};\\n\\nmodule.exports = function isTypedArray(value) {\\n\\tif (!value || typeof value !== 'object') { return false; }\\n\\tif (!hasToStringTag || !(Symbol.toStringTag in value)) {\\n\\t\\tvar tag = $slice($toString(value), 8, -1);\\n\\t\\treturn $indexOf(typedArrays, tag) > -1;\\n\\t}\\n\\tif (!gOPD) { return false; }\\n\\treturn tryTypedArrays(value);\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"forEach\",\"availableTypedArrays\",\"callBound\",\"$toString\",\"hasToStringTag\",\"g\",\"globalThis\",\"typedArrays\",\"$indexOf\",\"indexOf\",\"array\",\"value\",\"i\",\"length\",\"$slice\",\"toStrTags\",\"gOPD\",\"getPrototypeOf\",\"Object\",\"typedArray\",\"arr\",\"Symbol\",\"toStringTag\",\"proto\",\"descriptor\",\"superProto\",\"get\",\"tryTypedArrays\",\"anyTrue\",\"getter\",\"call\",\"e\",\"module.exports\",\"tag\"]\n}\n"]