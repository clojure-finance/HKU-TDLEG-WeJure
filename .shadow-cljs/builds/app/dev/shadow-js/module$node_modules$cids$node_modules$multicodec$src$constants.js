["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/cids/node_modules/multicodec/src/constants.js"],"~:js","shadow$provide.module$node_modules$cids$node_modules$multicodec$src$constants=function(global,require,module,exports){global=require(\"module$node_modules$cids$node_modules$multicodec$src$base_table_json\");require={};for(const [name,code]of Object.entries(global))require[name.toUpperCase().replace(/-/g,\"_\")]=code;module.exports=Object.freeze(require)}","~:source","shadow$provide[\"module$node_modules$cids$node_modules$multicodec$src$constants\"] = function(global,require,module,exports) {\n'use strict'\n\nconst table = require('./base-table.json')\n\n// map for codecConstant -> code\nconst constants = {}\n\nfor (const [name, code] of Object.entries(table)) {\n  constants[name.toUpperCase().replace(/-/g, '_')] = code\n}\n\nmodule.exports = Object.freeze(constants)\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$cids$node_modules$multicodec$src$base_table_json"]],"~:properties",["^5",[]],"~:compiled-at",1644840880234,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$cids$node_modules$multicodec$src$constants.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,8DAAA,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGrHC,MAAAA,CAAQH,OAAA,CAAQ,sEAAR,CAGRI,QAAAA,CAAY,EAElB,KAAK,MAAM,CAACC,IAAD,CAAOC,IAAP,CAAX,EAA2BC,OAAOC,CAAAA,OAAP,CAAeL,MAAf,CAA3B,CACEC,OAAA,CAAUC,IAAKI,CAAAA,WAAL,EAAmBC,CAAAA,OAAnB,CAA2B,IAA3B,CAAiC,GAAjC,CAAV,CAAA,CAAmDJ,IAGrDL,OAAOC,CAAAA,OAAP,CAAiBK,MAAOI,CAAAA,MAAP,CAAcP,OAAd,CAZ0G;\",\n\"sources\":[\"node_modules/cids/node_modules/multicodec/src/constants.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$cids$node_modules$multicodec$src$constants\\\"] = function(global,require,module,exports) {\\n'use strict'\\n\\nconst table = require('./base-table.json')\\n\\n// map for codecConstant -> code\\nconst constants = {}\\n\\nfor (const [name, code] of Object.entries(table)) {\\n  constants[name.toUpperCase().replace(/-/g, '_')] = code\\n}\\n\\nmodule.exports = Object.freeze(constants)\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"table\",\"constants\",\"name\",\"code\",\"Object\",\"entries\",\"toUpperCase\",\"replace\",\"freeze\"]\n}\n"]