["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/browserify-aes/modes/ofb.js"],"~:js","shadow$provide.module$node_modules$browserify_aes$modes$ofb=function(global,require,module,exports){var Buffer=require(\"module$node_modules$buffer$index\").Buffer,xor=require(\"module$node_modules$buffer_xor$index\");exports.encrypt=function(self$jscomp$0,chunk){for(;self$jscomp$0._cache.length<chunk.length;){var JSCompiler_temp_const=Buffer,JSCompiler_temp_const$jscomp$0=JSCompiler_temp_const.concat,JSCompiler_temp_const$jscomp$1=self$jscomp$0._cache,self=self$jscomp$0;self._prev=self._cipher.encryptBlock(self._prev);\nself$jscomp$0._cache=JSCompiler_temp_const$jscomp$0.call(JSCompiler_temp_const,[JSCompiler_temp_const$jscomp$1,self._prev])}JSCompiler_temp_const=self$jscomp$0._cache.slice(0,chunk.length);self$jscomp$0._cache=self$jscomp$0._cache.slice(chunk.length);return xor(chunk,JSCompiler_temp_const)}}","~:source","shadow$provide[\"module$node_modules$browserify_aes$modes$ofb\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\nvar xor = require('buffer-xor')\n\nfunction getBlock (self) {\n  self._prev = self._cipher.encryptBlock(self._prev)\n  return self._prev\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$buffer_xor$index","~$module$node_modules$buffer$index"]],"~:properties",["^5",["encrypt","_prev","_cache"]],"~:compiled-at",1644840879910,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$browserify_aes$modes$ofb.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACzG,IAAIC,OAASH,OAAA,CAAQ,kCAAR,CAAkBG,CAAAA,MAA/B,CACIC,IAAMJ,OAAA,CAAQ,sCAAR,CAOVE,QAAQG,CAAAA,OAAR,CAAkBC,QAAS,CAACC,aAAD,CAAOC,KAAP,CAAc,CACvC,IAAA,CAAOD,aAAKE,CAAAA,MAAOC,CAAAA,MAAnB,CAA4BF,KAAME,CAAAA,MAAlC,CAAA,CAA0C,CAC1BP,IAAAA,sBAAAA,MAAAA,CAAOQ,+BAAPR,qBAAOQ,CAAAA,MAAPR,CAAoBM,+BAALF,aAAKE,CAAAA,MAApBN,CAAqCI,KAAAA,aANrDA,KAAKK,CAAAA,KAAL,CAAaL,IAAKM,CAAAA,OAAQC,CAAAA,YAAb,CAA0BP,IAAKK,CAAAA,KAA/B,CAMXL;aAAKE,CAAAA,MAAL,CAAqBE,8BAAP,CAAA,IAAA,CAAAR,qBAAA,CAAc,CAAMM,8BAAN,CALvBF,IAAKK,CAAAA,KAKkB,CAAd,CAD0B,CAItCG,qBAAAA,CAAMR,aAAKE,CAAAA,MAAOO,CAAAA,KAAZ,CAAkB,CAAlB,CAAqBR,KAAME,CAAAA,MAA3B,CACVH,cAAKE,CAAAA,MAAL,CAAcF,aAAKE,CAAAA,MAAOO,CAAAA,KAAZ,CAAkBR,KAAME,CAAAA,MAAxB,CACd,OAAON,IAAA,CAAII,KAAJ,CAAWO,qBAAX,CAPgC,CATgE;\",\n\"sources\":[\"node_modules/browserify-aes/modes/ofb.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$browserify_aes$modes$ofb\\\"] = function(global,require,module,exports) {\\nvar Buffer = require('buffer').Buffer;\\nvar xor = require('buffer-xor')\\n\\nfunction getBlock (self) {\\n  self._prev = self._cipher.encryptBlock(self._prev)\\n  return self._prev\\n}\\n\\nexports.encrypt = function (self, chunk) {\\n  while (self._cache.length < chunk.length) {\\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\\n  }\\n\\n  var pad = self._cache.slice(0, chunk.length)\\n  self._cache = self._cache.slice(chunk.length)\\n  return xor(chunk, pad)\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Buffer\",\"xor\",\"encrypt\",\"exports.encrypt\",\"self\",\"chunk\",\"_cache\",\"length\",\"concat\",\"_prev\",\"_cipher\",\"encryptBlock\",\"pad\",\"slice\"]\n}\n"]