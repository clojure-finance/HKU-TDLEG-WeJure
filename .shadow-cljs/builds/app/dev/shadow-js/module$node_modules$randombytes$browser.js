["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/randombytes/browser.js"],"~:js","shadow$provide.module$node_modules$randombytes$browser=function(global,require,module,exports){function oldBrowser(){throw Error(\"Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11\");}function randomBytes(size,cb){if(4294967295<size)throw new RangeError(\"requested too many random bytes\");var bytes=Buffer.allocUnsafe(size);if(0<size)if(65536<size)for(var generated=0;generated<size;generated+=65536)crypto.getRandomValues(bytes.slice(generated,\ngenerated+65536));else crypto.getRandomValues(bytes);return\"function\"===typeof cb?process.nextTick(function(){cb(null,bytes)}):bytes}var process=require(\"module$node_modules$process$browser\");\"use strict\";var Buffer=require(\"module$node_modules$safe_buffer$index\").Buffer,crypto=global.crypto||global.msCrypto;module.exports=crypto&&crypto.getRandomValues?randomBytes:oldBrowser}","~:source","shadow$provide[\"module$node_modules$randombytes$browser\"] = function(global,require,module,exports) {\nvar process = require('process');\n'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$process$browser","~$shadow.js","~$module$node_modules$safe_buffer$index"]],"~:properties",["^5",[]],"~:compiled-at",1644840879828,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$randombytes$browser.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAYpGC,QAASA,WAAW,EAAG,CACrB,KAAUC,MAAJ,CAAU,gHAAV,CAAN,CADqB,CAavBC,QAASA,YAAY,CAACC,IAAD,CAAOC,EAAP,CAAW,CAE9B,GAjBeC,UAiBf,CAAIF,IAAJ,CAAuB,KAAM,KAAIG,UAAJ,CAAe,iCAAf,CAAN,CAEvB,IAAIC,MAAQC,MAAOC,CAAAA,WAAP,CAAmBN,IAAnB,CAEZ,IAAW,CAAX,CAAIA,IAAJ,CACE,GA1BYO,KA0BZ,CAAIP,IAAJ,CAEE,IAAK,IAAIQ,UAAY,CAArB,CAAwBA,SAAxB,CAAoCR,IAApC,CAA0CQ,SAA1C,EA5BUD,KA4BV,CAGEE,MAAOC,CAAAA,eAAP,CAAuBN,KAAMO,CAAAA,KAAN,CAAYH,SAAZ;AAAuBA,SAAvB,CA/BfD,KA+Be,CAAvB,CALJ,KAQEE,OAAOC,CAAAA,eAAP,CAAuBN,KAAvB,CAIJ,OAAkB,UAAlB,GAAI,MAAOH,GAAX,CACSW,OAAQC,CAAAA,QAAR,CAAiB,QAAS,EAAG,CAClCZ,EAAA,CAAG,IAAH,CAASG,KAAT,CADkC,CAA7B,CADT,CAMOA,KAzBuB,CAxBhC,IAAIQ,QAAUlB,OAAA,CAAQ,qCAAR,CACd,aAcA,KAAIW,OAASX,OAAA,CAAQ,uCAAR,CAAuBW,CAAAA,MAApC,CACII,OAAShB,MAAOgB,CAAAA,MAAhBA,EAA0BhB,MAAOqB,CAAAA,QAGnCnB,OAAOC,CAAAA,OAAP,CADEa,MAAJ,EAAcA,MAAOC,CAAAA,eAArB,CACmBX,WADnB,CAGmBF,UAtBiF;\",\n\"sources\":[\"node_modules/randombytes/browser.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$randombytes$browser\\\"] = function(global,require,module,exports) {\\nvar process = require('process');\\n'use strict'\\n\\n// limit of Crypto.getRandomValues()\\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\\nvar MAX_BYTES = 65536\\n\\n// Node supports requesting up to this number of bytes\\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\\nvar MAX_UINT32 = 4294967295\\n\\nfunction oldBrowser () {\\n  throw new Error('Secure random number generation is not supported by this browser.\\\\nUse Chrome, Firefox or Internet Explorer 11')\\n}\\n\\nvar Buffer = require('safe-buffer').Buffer\\nvar crypto = global.crypto || global.msCrypto\\n\\nif (crypto && crypto.getRandomValues) {\\n  module.exports = randomBytes\\n} else {\\n  module.exports = oldBrowser\\n}\\n\\nfunction randomBytes (size, cb) {\\n  // phantomjs needs to throw\\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\\n\\n  var bytes = Buffer.allocUnsafe(size)\\n\\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\\n        // buffer.slice automatically checks if the end is past the end of\\n        // the buffer so we don't have to here\\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\\n      }\\n    } else {\\n      crypto.getRandomValues(bytes)\\n    }\\n  }\\n\\n  if (typeof cb === 'function') {\\n    return process.nextTick(function () {\\n      cb(null, bytes)\\n    })\\n  }\\n\\n  return bytes\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"oldBrowser\",\"Error\",\"randomBytes\",\"size\",\"cb\",\"MAX_UINT32\",\"RangeError\",\"bytes\",\"Buffer\",\"allocUnsafe\",\"MAX_BYTES\",\"generated\",\"crypto\",\"getRandomValues\",\"slice\",\"process\",\"nextTick\",\"msCrypto\"]\n}\n"]