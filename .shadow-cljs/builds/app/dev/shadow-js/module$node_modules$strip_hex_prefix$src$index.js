["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/strip-hex-prefix/src/index.js"],"~:js","shadow$provide.module$node_modules$strip_hex_prefix$src$index=function(global,require,module,exports){var isHexPrefixed=require(\"module$node_modules$is_hex_prefixed$src$index\");module.exports=function(str){return\"string\"!==typeof str?str:isHexPrefixed(str)?str.slice(2):str}}","~:source","shadow$provide[\"module$node_modules$strip_hex_prefix$src$index\"] = function(global,require,module,exports) {\nvar isHexPrefixed = require('is-hex-prefixed');\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$is_hex_prefixed$src$index","~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1644840879698,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$strip_hex_prefix$src$index.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC3G,IAAIC,cAAgBH,OAAA,CAAQ,+CAAR,CAOpBC,OAAOC,CAAAA,OAAP,CAAiBE,QAAuB,CAACC,GAAD,CAAM,CAC5C,MAAmB,QAAnB,GAAI,MAAOA,IAAX,CACSA,GADT,CAIOF,aAAA,CAAcE,GAAd,CAAA,CAAqBA,GAAIC,CAAAA,KAAJ,CAAU,CAAV,CAArB,CAAoCD,GALC,CAR6D;\",\n\"sources\":[\"node_modules/strip-hex-prefix/src/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$strip_hex_prefix$src$index\\\"] = function(global,require,module,exports) {\\nvar isHexPrefixed = require('is-hex-prefixed');\\n\\n/**\\n * Removes '0x' from a given `String` is present\\n * @param {String} str the string value\\n * @return {String|Optional} a string by pass if necessary\\n */\\nmodule.exports = function stripHexPrefix(str) {\\n  if (typeof str !== 'string') {\\n    return str;\\n  }\\n\\n  return isHexPrefixed(str) ? str.slice(2) : str;\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"isHexPrefixed\",\"module.exports\",\"str\",\"slice\"]\n}\n"]