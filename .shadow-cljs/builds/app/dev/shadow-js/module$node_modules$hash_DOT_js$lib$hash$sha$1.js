["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/hash_DOT_js/lib/hash/sha/1.js"],"~:js","shadow$provide.module$node_modules$hash_DOT_js$lib$hash$sha$1=function(global,require,module,exports){function SHA1(){if(!(this instanceof SHA1))return new SHA1;BlockHash.call(this);this.h=[1732584193,4023233417,2562383102,271733878,3285377520];this.W=Array(80)}var utils=require(\"module$node_modules$hash_DOT_js$lib$hash$utils\");global=require(\"module$node_modules$hash_DOT_js$lib$hash$common\");require=require(\"module$node_modules$hash_DOT_js$lib$hash$sha$common\");var rotl32=utils.rotl32,sum32=utils.sum32,\nsum32_5=utils.sum32_5,ft_1=require.ft_1,BlockHash=global.BlockHash,sha1_K=[1518500249,1859775393,2400959708,3395469782];utils.inherits(SHA1,BlockHash);module.exports=SHA1;SHA1.blockSize=512;SHA1.outSize=160;SHA1.hmacStrength=80;SHA1.padLength=64;SHA1.prototype._update=function(msg,start){for(var W=this.W,i=0;16>i;i++)W[i]=msg[start+i];for(;i<W.length;i++)W[i]=rotl32(W[i-3]^W[i-8]^W[i-14]^W[i-16],1);msg=this.h[0];start=this.h[1];var c=this.h[2],d=this.h[3],e=this.h[4];for(i=0;i<W.length;i++){var s=\n~~(i/20);s=sum32_5(rotl32(msg,5),ft_1(s,start,c,d),e,W[i],sha1_K[s]);e=d;d=c;c=rotl32(start,30);start=msg;msg=s}this.h[0]=sum32(this.h[0],msg);this.h[1]=sum32(this.h[1],start);this.h[2]=sum32(this.h[2],c);this.h[3]=sum32(this.h[3],d);this.h[4]=sum32(this.h[4],e)};SHA1.prototype._digest=function(enc){return\"hex\"===enc?utils.toHex32(this.h,\"big\"):utils.split32(this.h,\"big\")}}","~:source","shadow$provide[\"module$node_modules$hash_DOT_js$lib$hash$sha$1\"] = function(global,require,module,exports) {\n'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$hash_DOT_js$lib$hash$sha$common","~$module$node_modules$hash_DOT_js$lib$hash$common","~$module$node_modules$hash_DOT_js$lib$hash$utils"]],"~:properties",["^5",["_digest","outSize","blockSize","padLength","hmacStrength","h","_update","W"]],"~:compiled-at",1644840880016,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$hash_DOT_js$lib$hash$sha$1.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/hash_DOT_js/lib/hash/sha/1.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$hash_DOT_js$lib$hash$sha$1\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\nvar utils = require('../utils');\\nvar common = require('../common');\\nvar shaCommon = require('./common');\\n\\nvar rotl32 = utils.rotl32;\\nvar sum32 = utils.sum32;\\nvar sum32_5 = utils.sum32_5;\\nvar ft_1 = shaCommon.ft_1;\\nvar BlockHash = common.BlockHash;\\n\\nvar sha1_K = [\\n  0x5A827999, 0x6ED9EBA1,\\n  0x8F1BBCDC, 0xCA62C1D6\\n];\\n\\nfunction SHA1() {\\n  if (!(this instanceof SHA1))\\n    return new SHA1();\\n\\n  BlockHash.call(this);\\n  this.h = [\\n    0x67452301, 0xefcdab89, 0x98badcfe,\\n    0x10325476, 0xc3d2e1f0 ];\\n  this.W = new Array(80);\\n}\\n\\nutils.inherits(SHA1, BlockHash);\\nmodule.exports = SHA1;\\n\\nSHA1.blockSize = 512;\\nSHA1.outSize = 160;\\nSHA1.hmacStrength = 80;\\nSHA1.padLength = 64;\\n\\nSHA1.prototype._update = function _update(msg, start) {\\n  var W = this.W;\\n\\n  for (var i = 0; i < 16; i++)\\n    W[i] = msg[start + i];\\n\\n  for(; i < W.length; i++)\\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\\n\\n  var a = this.h[0];\\n  var b = this.h[1];\\n  var c = this.h[2];\\n  var d = this.h[3];\\n  var e = this.h[4];\\n\\n  for (i = 0; i < W.length; i++) {\\n    var s = ~~(i / 20);\\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\\n    e = d;\\n    d = c;\\n    c = rotl32(b, 30);\\n    b = a;\\n    a = t;\\n  }\\n\\n  this.h[0] = sum32(this.h[0], a);\\n  this.h[1] = sum32(this.h[1], b);\\n  this.h[2] = sum32(this.h[2], c);\\n  this.h[3] = sum32(this.h[3], d);\\n  this.h[4] = sum32(this.h[4], e);\\n};\\n\\nSHA1.prototype._digest = function digest(enc) {\\n  if (enc === 'hex')\\n    return utils.toHex32(this.h, 'big');\\n  else\\n    return utils.split32(this.h, 'big');\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"SHA1\",\"BlockHash\",\"call\",\"h\",\"W\",\"Array\",\"utils\",\"common\",\"shaCommon\",\"rotl32\",\"sum32\",\"sum32_5\",\"ft_1\",\"sha1_K\",\"inherits\",\"blockSize\",\"outSize\",\"hmacStrength\",\"padLength\",\"prototype\",\"_update\",\"SHA1.prototype._update\",\"msg\",\"start\",\"i\",\"length\",\"a\",\"b\",\"c\",\"d\",\"e\",\"s\",\"t\",\"_digest\",\"SHA1.prototype._digest\",\"enc\",\"toHex32\",\"split32\"]\n}\n"]