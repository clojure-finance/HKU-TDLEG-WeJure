["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/uuid/lib/bytesToUuid.js"],"~:js","shadow$provide.module$node_modules$uuid$lib$bytesToUuid=function(global,require,module,exports){var byteToHex=[];for(global=0;256>global;++global)byteToHex[global]=(global+256).toString(16).substr(1);module.exports=function(buf,offset){offset=offset||0;return[byteToHex[buf[offset++]],byteToHex[buf[offset++]],byteToHex[buf[offset++]],byteToHex[buf[offset++]],\"-\",byteToHex[buf[offset++]],byteToHex[buf[offset++]],\"-\",byteToHex[buf[offset++]],byteToHex[buf[offset++]],\"-\",byteToHex[buf[offset++]],byteToHex[buf[offset++]],\n\"-\",byteToHex[buf[offset++]],byteToHex[buf[offset++]],byteToHex[buf[offset++]],byteToHex[buf[offset++]],byteToHex[buf[offset++]],byteToHex[buf[offset++]]].join(\"\")}}","~:source","shadow$provide[\"module$node_modules$uuid$lib$bytesToUuid\"] = function(global,require,module,exports) {\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1644840880271,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$uuid$lib$bytesToUuid.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAKrG,IAAIC,UAAY,EAChB,KAASC,MAAT,CAAa,CAAb,CAAoB,GAApB,CAAgBA,MAAhB,CAAyB,EAAEA,MAA3B,CACED,SAAA,CAAUC,MAAV,CAAA,CAA2BC,CAAXD,MAAWC,CAAP,GAAOA,EAAAA,QAAZ,CAAqB,EAArB,CAAyBC,CAAAA,MAAzB,CAAgC,CAAhC,CAiBjBL,OAAOC,CAAAA,OAAP,CAdAK,QAAoB,CAACC,GAAD,CAAMC,MAAN,CAAc,CAC5BL,MAAAA,CAAIK,MAAJL,EAAc,CAGlB,OAAQ,CAFED,SAED,CAAIK,GAAA,CAAIJ,MAAA,EAAJ,CAAJ,CAAD,CAFED,SAEc,CAAIK,GAAA,CAAIJ,MAAA,EAAJ,CAAJ,CAAhB,CAFED,SAGX,CAAIK,GAAA,CAAIJ,MAAA,EAAJ,CAAJ,CADS,CAFED,SAGI,CAAIK,GAAA,CAAIJ,MAAA,EAAJ,CAAJ,CADN,CACqB,GADrB,CAFED,SAIX,CAAIK,GAAA,CAAIJ,MAAA,EAAJ,CAAJ,CAFS,CAFED,SAII,CAAIK,GAAA,CAAIJ,MAAA,EAAJ,CAAJ,CAFN,CAEqB,GAFrB,CAFED,SAKX,CAAIK,GAAA,CAAIJ,MAAA,EAAJ,CAAJ,CAHS,CAFED,SAKI,CAAIK,GAAA,CAAIJ,MAAA,EAAJ,CAAJ,CAHN,CAGqB,GAHrB,CAFED,SAMX,CAAIK,GAAA,CAAIJ,MAAA,EAAJ,CAAJ,CAJS,CAFED,SAMI,CAAIK,GAAA,CAAIJ,MAAA,EAAJ,CAAJ,CAJN;AAIqB,GAJrB,CAFED,SAOX,CAAIK,GAAA,CAAIJ,MAAA,EAAJ,CAAJ,CALS,CAFED,SAOI,CAAIK,GAAA,CAAIJ,MAAA,EAAJ,CAAJ,CALN,CAFED,SAQX,CAAIK,GAAA,CAAIJ,MAAA,EAAJ,CAAJ,CANS,CAFED,SAQI,CAAIK,GAAA,CAAIJ,MAAA,EAAJ,CAAJ,CANN,CAFED,SASX,CAAIK,GAAA,CAAIJ,MAAA,EAAJ,CAAJ,CAPS,CAFED,SASI,CAAIK,GAAA,CAAIJ,MAAA,EAAJ,CAAJ,CAPN,CAOsBM,CAAAA,IAPvB,CAO4B,EAP5B,CAJyB,CAVmE;\",\n\"sources\":[\"node_modules/uuid/lib/bytesToUuid.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$uuid$lib$bytesToUuid\\\"] = function(global,require,module,exports) {\\n/**\\n * Convert array of 16 byte values to UUID string format of the form:\\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\\n */\\nvar byteToHex = [];\\nfor (var i = 0; i < 256; ++i) {\\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\\n}\\n\\nfunction bytesToUuid(buf, offset) {\\n  var i = offset || 0;\\n  var bth = byteToHex;\\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\\n  return ([bth[buf[i++]], bth[buf[i++]], \\n\\tbth[buf[i++]], bth[buf[i++]], '-',\\n\\tbth[buf[i++]], bth[buf[i++]], '-',\\n\\tbth[buf[i++]], bth[buf[i++]], '-',\\n\\tbth[buf[i++]], bth[buf[i++]], '-',\\n\\tbth[buf[i++]], bth[buf[i++]],\\n\\tbth[buf[i++]], bth[buf[i++]],\\n\\tbth[buf[i++]], bth[buf[i++]]]).join('');\\n}\\n\\nmodule.exports = bytesToUuid;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"byteToHex\",\"i\",\"toString\",\"substr\",\"bytesToUuid\",\"buf\",\"offset\",\"join\"]\n}\n"]