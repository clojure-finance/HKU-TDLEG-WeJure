["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/cids/node_modules/multicodec/src/int-table.js"],"~:js","shadow$provide.module$node_modules$cids$node_modules$multicodec$src$int_table=function(global,require,module,exports){global=require(\"module$node_modules$cids$node_modules$multicodec$src$base_table_json\");require=new Map;for(const encodingName in global)require.set(global[encodingName],encodingName);module.exports=Object.freeze(require)}","~:source","shadow$provide[\"module$node_modules$cids$node_modules$multicodec$src$int_table\"] = function(global,require,module,exports) {\n'use strict'\nconst baseTable = require('./base-table.json')\n\n// map for hexString -> codecName\nconst nameTable = new Map()\n\nfor (const encodingName in baseTable) {\n  const code = baseTable[encodingName]\n  nameTable.set(code, encodingName)\n}\n\nmodule.exports = Object.freeze(nameTable)\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$cids$node_modules$multicodec$src$base_table_json"]],"~:properties",["^5",[]],"~:compiled-at",1644840880234,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$cids$node_modules$multicodec$src$int_table.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,8DAAA,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAErHC,MAAAA,CAAYH,OAAA,CAAQ,sEAAR,CAGZI,QAAAA,CAAY,IAAIC,GAEtB,KAAK,MAAMC,YAAX,GAA2BH,OAA3B,CAEEC,OAAUG,CAAAA,GAAV,CADaJ,MAAAK,CAAUF,YAAVE,CACb,CAAoBF,YAApB,CAGFL,OAAOC,CAAAA,OAAP,CAAiBO,MAAOC,CAAAA,MAAP,CAAcN,OAAd,CAZ0G;\",\n\"sources\":[\"node_modules/cids/node_modules/multicodec/src/int-table.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$cids$node_modules$multicodec$src$int_table\\\"] = function(global,require,module,exports) {\\n'use strict'\\nconst baseTable = require('./base-table.json')\\n\\n// map for hexString -> codecName\\nconst nameTable = new Map()\\n\\nfor (const encodingName in baseTable) {\\n  const code = baseTable[encodingName]\\n  nameTable.set(code, encodingName)\\n}\\n\\nmodule.exports = Object.freeze(nameTable)\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"baseTable\",\"nameTable\",\"Map\",\"encodingName\",\"set\",\"code\",\"Object\",\"freeze\"]\n}\n"]