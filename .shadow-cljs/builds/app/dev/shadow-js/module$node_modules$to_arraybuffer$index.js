["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/to-arraybuffer/index.js"],"~:js","shadow$provide.module$node_modules$to_arraybuffer$index=function(global,require,module,exports){var Buffer=require(\"module$node_modules$buffer$index\").Buffer;module.exports=function(buf){if(buf instanceof Uint8Array){if(0===buf.byteOffset&&buf.byteLength===buf.buffer.byteLength)return buf.buffer;if(\"function\"===typeof buf.buffer.slice)return buf.buffer.slice(buf.byteOffset,buf.byteOffset+buf.byteLength)}if(Buffer.isBuffer(buf)){for(var arrayCopy=new Uint8Array(buf.length),len=buf.length,i=0;i<len;i++)arrayCopy[i]=\nbuf[i];return arrayCopy.buffer}throw Error(\"Argument must be a Buffer\");}}","~:source","shadow$provide[\"module$node_modules$to_arraybuffer$index\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer\n\nmodule.exports = function (buf) {\n\t// If the buffer is backed by a Uint8Array, a faster version will work\n\tif (buf instanceof Uint8Array) {\n\t\t// If the buffer isn't a subarray, return the underlying ArrayBuffer\n\t\tif (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\n\t\t\treturn buf.buffer\n\t\t} else if (typeof buf.buffer.slice === 'function') {\n\t\t\t// Otherwise we need to get a proper copy\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)\n\t\t}\n\t}\n\n\tif (Buffer.isBuffer(buf)) {\n\t\t// This is the slow version that will work with any Buffer\n\t\t// implementation (even in old browsers)\n\t\tvar arrayCopy = new Uint8Array(buf.length)\n\t\tvar len = buf.length\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tarrayCopy[i] = buf[i]\n\t\t}\n\t\treturn arrayCopy.buffer\n\t} else {\n\t\tthrow new Error('Argument must be a Buffer')\n\t}\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$buffer$index"]],"~:properties",["^5",[]],"~:compiled-at",1644840880142,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$to_arraybuffer$index.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACrG,IAAIC,OAASH,OAAA,CAAQ,kCAAR,CAAkBG,CAAAA,MAE/BF,OAAOC,CAAAA,OAAP,CAAiBE,QAAS,CAACC,GAAD,CAAM,CAE/B,GAAIA,GAAJ,WAAmBC,WAAnB,CAA+B,CAE9B,GAAuB,CAAvB,GAAID,GAAIE,CAAAA,UAAR,EAA4BF,GAAIG,CAAAA,UAAhC,GAA+CH,GAAII,CAAAA,MAAOD,CAAAA,UAA1D,CACC,MAAOH,IAAII,CAAAA,MACL,IAAgC,UAAhC,GAAI,MAAOJ,IAAII,CAAAA,MAAOC,CAAAA,KAAtB,CAEN,MAAOL,IAAII,CAAAA,MAAOC,CAAAA,KAAX,CAAiBL,GAAIE,CAAAA,UAArB,CAAiCF,GAAIE,CAAAA,UAArC,CAAkDF,GAAIG,CAAAA,UAAtD,CANsB,CAU/B,GAAIL,MAAOQ,CAAAA,QAAP,CAAgBN,GAAhB,CAAJ,CAA0B,CAKzB,IAFA,IAAIO,UAAY,IAAIN,UAAJ,CAAeD,GAAIQ,CAAAA,MAAnB,CAAhB,CACIC,IAAMT,GAAIQ,CAAAA,MADd,CAESE,EAAI,CAAb,CAAgBA,CAAhB,CAAoBD,GAApB,CAAyBC,CAAA,EAAzB,CACCH,SAAA,CAAUG,CAAV,CAAA;AAAeV,GAAA,CAAIU,CAAJ,CAEhB,OAAOH,UAAUH,CAAAA,MARQ,CAUzB,KAAUO,MAAJ,CAAU,2BAAV,CAAN,CAtB8B,CAHqE;\",\n\"sources\":[\"node_modules/to-arraybuffer/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$to_arraybuffer$index\\\"] = function(global,require,module,exports) {\\nvar Buffer = require('buffer').Buffer\\n\\nmodule.exports = function (buf) {\\n\\t// If the buffer is backed by a Uint8Array, a faster version will work\\n\\tif (buf instanceof Uint8Array) {\\n\\t\\t// If the buffer isn't a subarray, return the underlying ArrayBuffer\\n\\t\\tif (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {\\n\\t\\t\\treturn buf.buffer\\n\\t\\t} else if (typeof buf.buffer.slice === 'function') {\\n\\t\\t\\t// Otherwise we need to get a proper copy\\n\\t\\t\\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength)\\n\\t\\t}\\n\\t}\\n\\n\\tif (Buffer.isBuffer(buf)) {\\n\\t\\t// This is the slow version that will work with any Buffer\\n\\t\\t// implementation (even in old browsers)\\n\\t\\tvar arrayCopy = new Uint8Array(buf.length)\\n\\t\\tvar len = buf.length\\n\\t\\tfor (var i = 0; i < len; i++) {\\n\\t\\t\\tarrayCopy[i] = buf[i]\\n\\t\\t}\\n\\t\\treturn arrayCopy.buffer\\n\\t} else {\\n\\t\\tthrow new Error('Argument must be a Buffer')\\n\\t}\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Buffer\",\"module.exports\",\"buf\",\"Uint8Array\",\"byteOffset\",\"byteLength\",\"buffer\",\"slice\",\"isBuffer\",\"arrayCopy\",\"length\",\"len\",\"i\",\"Error\"]\n}\n"]