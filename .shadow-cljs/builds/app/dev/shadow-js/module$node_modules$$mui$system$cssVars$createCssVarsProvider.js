["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/system/cssVars/createCssVarsProvider.js"],"~:js","shadow$provide.module$node_modules$$mui$system$cssVars$createCssVarsProvider=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if(\"function\"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;\nif(null===obj||\"object\"!==typeof obj&&\"function\"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if(\"default\"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,\ndesc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}global=require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:!0});exports.DISABLE_CSS_TRANSITION=void 0;exports.default=function(options){function CssVarsProvider({children,theme:themeProp={},prefix=designSystemPrefix,modeStorageKey=_getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,attribute=_getInitColorSchemeScript.DEFAULT_ATTRIBUTE,\ndefaultMode=desisgnSystemMode,defaultColorScheme=designSystemColorScheme}){var clonedBaseTheme=React.useMemo(()=>JSON.parse(JSON.stringify(baseTheme)),[]),{colorSchemes:baseColorSchemes={}}=clonedBaseTheme;clonedBaseTheme=(0,_objectWithoutPropertiesLoose2.default)(clonedBaseTheme,_excluded);var {colorSchemes:colorSchemesProp={}}=themeProp,restThemeProp=(0,_objectWithoutPropertiesLoose2.default)(themeProp,_excluded2);const hasMounted=React.useRef(!1);restThemeProp=(0,_utils.deepmerge)(clonedBaseTheme,\nrestThemeProp);({components:clonedBaseTheme={}}=restThemeProp);let mergedTheme=(0,_objectWithoutPropertiesLoose2.default)(restThemeProp,_excluded3);baseColorSchemes=(0,_utils.deepmerge)(baseColorSchemes,colorSchemesProp);colorSchemesProp=Object.keys(baseColorSchemes);restThemeProp=\"string\"===typeof defaultColorScheme?defaultColorScheme:defaultColorScheme.light;const defaultDarkColorScheme=\"string\"===typeof defaultColorScheme?defaultColorScheme:defaultColorScheme.dark,{mode,setMode,systemMode,lightColorScheme,\ndarkColorScheme,colorScheme,setColorScheme}=(0,_useCurrentColorScheme.default)({supportedColorSchemes:colorSchemesProp,defaultLightColorScheme:restThemeProp,defaultDarkColorScheme,modeStorageKey,defaultMode});modeStorageKey=colorScheme?colorScheme:\"dark\"===defaultMode?defaultDarkColorScheme:restThemeProp;const {css:rootCss,vars:rootVars}=(0,_cssVarsParser.default)(mergedTheme,{prefix,basePrefix:designSystemPrefix,shouldSkipGeneratingVar});mergedTheme=(0,_extends2.default)({},mergedTheme,baseColorSchemes[modeStorageKey],\n{components:clonedBaseTheme,colorSchemes:baseColorSchemes,vars:rootVars,spacing:themeProp.spacing?(0,_createSpacing.default)(themeProp.spacing):systemSpacing,breakpoints:themeProp.breakpoints?(0,_createBreakpoints.default)(themeProp.breakpoints):systemBreakpoints,getCssVar:(0,_createGetCssVar.default)(prefix)});const styleSheet={};Object.entries(baseColorSchemes).forEach(([key,scheme])=>{const {css,vars}=(0,_cssVarsParser.default)(scheme,{prefix,basePrefix:designSystemPrefix,shouldSkipGeneratingVar});\nmergedTheme.vars=(0,_utils.deepmerge)(mergedTheme.vars,vars);key===(\"string\"===typeof defaultColorScheme?defaultColorScheme:\"dark\"===defaultMode?defaultColorScheme.dark:defaultColorScheme.light)?styleSheet[\":root\"]=css:styleSheet[`[${attribute}=\"${key}\"]`]=css});React.useEffect(()=>{colorScheme&&document.documentElement.setAttribute(attribute,colorScheme)},[colorScheme,attribute]);(0,_utils.unstable_useEnhancedEffect)(()=>{if(mode&&enableColorScheme){var priorColorScheme=document.documentElement.style.getPropertyValue(\"color-scheme\");\n\"system\"===mode?document.documentElement.style.setProperty(\"color-scheme\",systemMode):document.documentElement.style.setProperty(\"color-scheme\",mode);return()=>{document.documentElement.style.setProperty(\"color-scheme\",priorColorScheme)}}},[mode,systemMode]);React.useEffect(()=>{let timer;if(disableTransitionOnChange&&hasMounted.current){const css=document.createElement(\"style\");css.appendChild(document.createTextNode(\"*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}\"));\ndocument.head.appendChild(css);window.getComputedStyle(document.body);timer=setTimeout(()=>{document.head.removeChild(css)},1)}return()=>{clearTimeout(timer)}},[colorScheme]);React.useEffect(()=>{hasMounted.current=!0;return()=>{hasMounted.current=!1}},[]);return(0,_jsxRuntime.jsxs)(ColorSchemeContext.Provider,{value:{mode,setMode,lightColorScheme,darkColorScheme,colorScheme,setColorScheme,allColorSchemes:colorSchemesProp},children:[(0,_jsxRuntime.jsx)(_styledEngine.GlobalStyles,{styles:{\":root\":rootCss}}),\n(0,_jsxRuntime.jsx)(_styledEngine.GlobalStyles,{styles:styleSheet}),(0,_jsxRuntime.jsx)(_ThemeProvider.default,{theme:mergedTheme,children})]})}var _baseTheme$breakpoint;const {theme:baseTheme={},defaultMode:desisgnSystemMode=\"light\",defaultColorScheme:designSystemColorScheme,disableTransitionOnChange=!1,enableColorScheme=!0,prefix:designSystemPrefix=\"\",shouldSkipGeneratingVar}=options,systemSpacing=(0,_createSpacing.default)(baseTheme.spacing),systemBreakpoints=(0,_createBreakpoints.default)(null!=\n(_baseTheme$breakpoint=baseTheme.breakpoints)?_baseTheme$breakpoint:{});(!baseTheme.colorSchemes||\"string\"===typeof designSystemColorScheme&&!baseTheme.colorSchemes[designSystemColorScheme]||\"object\"===typeof designSystemColorScheme&&!baseTheme.colorSchemes[null==designSystemColorScheme?void 0:designSystemColorScheme.light]||\"object\"===typeof designSystemColorScheme&&!baseTheme.colorSchemes[null==designSystemColorScheme?void 0:designSystemColorScheme.dark])&&console.error(`MUI: \\`${designSystemColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\nconst ColorSchemeContext=React.createContext(void 0);CssVarsProvider.propTypes={attribute:_propTypes.default.string,children:_propTypes.default.node,defaultColorScheme:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.object]),defaultMode:_propTypes.default.string,modeStorageKey:_propTypes.default.string,prefix:_propTypes.default.string,theme:_propTypes.default.object};return{CssVarsProvider,useColorScheme:()=>{const value=React.useContext(ColorSchemeContext);if(!value)throw Error(\"MUI: `useColorScheme` must be called under \\x3cCssVarsProvider /\\x3e\");\nreturn value},getInitColorSchemeScript:_getInitColorSchemeScript.default}};var _extends2=global(require(\"module$node_modules$$babel$runtime$helpers$extends\")),_objectWithoutPropertiesLoose2=global(require(\"module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose\")),_utils=require(\"module$node_modules$$mui$utils$index\"),React=_interopRequireWildcard(require(\"module$node_modules$react$index\")),_propTypes=global(require(\"module$node_modules$prop_types$index\")),_styledEngine=require(\"module$node_modules$$mui$styled_engine$node$index\"),\n_createSpacing=global(require(\"module$node_modules$$mui$system$createTheme$createSpacing\")),_createBreakpoints=global(require(\"module$node_modules$$mui$system$createTheme$createBreakpoints\")),_cssVarsParser=global(require(\"module$node_modules$$mui$system$cssVars$cssVarsParser\")),_ThemeProvider=global(require(\"module$node_modules$$mui$system$ThemeProvider$index\")),_getInitColorSchemeScript=_interopRequireWildcard(require(\"module$node_modules$$mui$system$cssVars$getInitColorSchemeScript\")),_useCurrentColorScheme=\nglobal(require(\"module$node_modules$$mui$system$cssVars$useCurrentColorScheme\")),_createGetCssVar=global(require(\"module$node_modules$$mui$system$cssVars$createGetCssVar\")),_jsxRuntime=require(\"module$node_modules$react$jsx_runtime\");const _excluded=[\"colorSchemes\"],_excluded2=[\"colorSchemes\"],_excluded3=[\"components\"];exports.DISABLE_CSS_TRANSITION=\"*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}\"}","~:source","shadow$provide[\"module$node_modules$$mui$system$cssVars$createCssVarsProvider\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DISABLE_CSS_TRANSITION = void 0;\nexports.default = createCssVarsProvider;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styledEngine = require(\"@mui/styled-engine\");\n\nvar _createSpacing = _interopRequireDefault(require(\"../createTheme/createSpacing\"));\n\nvar _createBreakpoints = _interopRequireDefault(require(\"../createTheme/createBreakpoints\"));\n\nvar _cssVarsParser = _interopRequireDefault(require(\"./cssVarsParser\"));\n\nvar _ThemeProvider = _interopRequireDefault(require(\"../ThemeProvider\"));\n\nvar _getInitColorSchemeScript = _interopRequireWildcard(require(\"./getInitColorSchemeScript\"));\n\nvar _useCurrentColorScheme = _interopRequireDefault(require(\"./useCurrentColorScheme\"));\n\nvar _createGetCssVar = _interopRequireDefault(require(\"./createGetCssVar\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nconst _excluded = [\"colorSchemes\"],\n      _excluded2 = [\"colorSchemes\"],\n      _excluded3 = [\"components\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nexports.DISABLE_CSS_TRANSITION = DISABLE_CSS_TRANSITION;\n\nfunction createCssVarsProvider(options) {\n  var _baseTheme$breakpoint;\n\n  const {\n    theme: baseTheme = {},\n    defaultMode: desisgnSystemMode = 'light',\n    defaultColorScheme: designSystemColorScheme,\n    disableTransitionOnChange = false,\n    enableColorScheme = true,\n    prefix: designSystemPrefix = '',\n    shouldSkipGeneratingVar\n  } = options;\n  const systemSpacing = (0, _createSpacing.default)(baseTheme.spacing);\n  const systemBreakpoints = (0, _createBreakpoints.default)((_baseTheme$breakpoint = baseTheme.breakpoints) != null ? _baseTheme$breakpoint : {});\n\n  if (!baseTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !baseTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !baseTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !baseTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\n    console.error(`MUI: \\`${designSystemColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n  }\n\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n\n  const useColorScheme = () => {\n    const value = React.useContext(ColorSchemeContext);\n\n    if (!value) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`useColorScheme\\` must be called under <CssVarsProvider />` : (0, _utils.formatMuiErrorMessage)(19));\n    }\n\n    return value;\n  };\n\n  function CssVarsProvider({\n    children,\n    theme: themeProp = {},\n    prefix = designSystemPrefix,\n    modeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\n    attribute = _getInitColorSchemeScript.DEFAULT_ATTRIBUTE,\n    defaultMode = desisgnSystemMode,\n    defaultColorScheme = designSystemColorScheme\n  }) {\n    // make sure that baseTheme is always independent of each <CssVarsProvider /> call.\n    // JSON.parse(JSON.stringify(...)) is okay to be used as long as the baseTheme is a plain object.\n    const clonedBaseTheme = React.useMemo(() => JSON.parse(JSON.stringify(baseTheme)), []);\n    const {\n      colorSchemes: baseColorSchemes = {}\n    } = clonedBaseTheme,\n          restBaseTheme = (0, _objectWithoutPropertiesLoose2.default)(clonedBaseTheme, _excluded);\n    const {\n      colorSchemes: colorSchemesProp = {}\n    } = themeProp,\n          restThemeProp = (0, _objectWithoutPropertiesLoose2.default)(themeProp, _excluded2);\n    const hasMounted = React.useRef(false); // eslint-disable-next-line prefer-const\n\n    let _deepmerge = (0, _utils.deepmerge)(restBaseTheme, restThemeProp),\n        {\n      components = {}\n    } = _deepmerge,\n        mergedTheme = (0, _objectWithoutPropertiesLoose2.default)(_deepmerge, _excluded3);\n\n    const colorSchemes = (0, _utils.deepmerge)(baseColorSchemes, colorSchemesProp);\n    const allColorSchemes = Object.keys(colorSchemes);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n    const {\n      mode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme,\n      setColorScheme\n    } = (0, _useCurrentColorScheme.default)({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      defaultMode\n    });\n\n    const resolvedColorScheme = (() => {\n      if (!colorScheme) {\n        // This scope occurs on the server\n        if (defaultMode === 'dark') {\n          return defaultDarkColorScheme;\n        } // use light color scheme, if default mode is 'light' | 'auto'\n\n\n        return defaultLightColorScheme;\n      }\n\n      return colorScheme;\n    })();\n\n    const {\n      css: rootCss,\n      vars: rootVars\n    } = (0, _cssVarsParser.default)(mergedTheme, {\n      prefix,\n      basePrefix: designSystemPrefix,\n      shouldSkipGeneratingVar\n    });\n    mergedTheme = (0, _extends2.default)({}, mergedTheme, colorSchemes[resolvedColorScheme], {\n      components,\n      colorSchemes,\n      vars: rootVars,\n      spacing: themeProp.spacing ? (0, _createSpacing.default)(themeProp.spacing) : systemSpacing,\n      breakpoints: themeProp.breakpoints ? (0, _createBreakpoints.default)(themeProp.breakpoints) : systemBreakpoints,\n      getCssVar: (0, _createGetCssVar.default)(prefix)\n    });\n    const styleSheet = {};\n    Object.entries(colorSchemes).forEach(([key, scheme]) => {\n      const {\n        css,\n        vars\n      } = (0, _cssVarsParser.default)(scheme, {\n        prefix,\n        basePrefix: designSystemPrefix,\n        shouldSkipGeneratingVar\n      });\n      mergedTheme.vars = (0, _utils.deepmerge)(mergedTheme.vars, vars);\n\n      const resolvedDefaultColorScheme = (() => {\n        if (typeof defaultColorScheme === 'string') {\n          return defaultColorScheme;\n        }\n\n        if (defaultMode === 'dark') {\n          return defaultColorScheme.dark;\n        }\n\n        return defaultColorScheme.light;\n      })();\n\n      if (key === resolvedDefaultColorScheme) {\n        styleSheet[':root'] = css;\n      } else {\n        styleSheet[`[${attribute}=\"${key}\"]`] = css;\n      }\n    });\n    React.useEffect(() => {\n      if (colorScheme) {\n        // attaches attribute to <html> because the css variables are attached to :root (html)\n        document.documentElement.setAttribute(attribute, colorScheme);\n      }\n    }, [colorScheme, attribute]);\n    (0, _utils.unstable_useEnhancedEffect)(() => {\n      if (!mode || !enableColorScheme) {\n        return undefined;\n      }\n\n      const priorColorScheme = document.documentElement.style.getPropertyValue('color-scheme'); // `color-scheme` tells browser to render built-in elements according to its value: `light` or `dark`\n\n      if (mode === 'system') {\n        document.documentElement.style.setProperty('color-scheme', systemMode);\n      } else {\n        document.documentElement.style.setProperty('color-scheme', mode);\n      }\n\n      return () => {\n        document.documentElement.style.setProperty('color-scheme', priorColorScheme);\n      };\n    }, [mode, systemMode]);\n    React.useEffect(() => {\n      let timer;\n\n      if (disableTransitionOnChange && hasMounted.current) {\n        // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n        const css = document.createElement('style');\n        css.appendChild(document.createTextNode(DISABLE_CSS_TRANSITION));\n        document.head.appendChild(css); // Force browser repaint\n\n        (() => window.getComputedStyle(document.body))();\n\n        timer = setTimeout(() => {\n          document.head.removeChild(css);\n        }, 1);\n      }\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(ColorSchemeContext.Provider, {\n      value: {\n        mode,\n        setMode,\n        lightColorScheme,\n        darkColorScheme,\n        colorScheme,\n        setColorScheme,\n        allColorSchemes\n      },\n      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n        styles: {\n          ':root': rootCss\n        }\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n        styles: styleSheet\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_ThemeProvider.default, {\n        theme: mergedTheme,\n        children: children\n      })]\n    });\n  }\n\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The body attribute name to attach colorScheme.\n     */\n    attribute: _propTypes.default.string,\n\n    /**\n     * The component tree.\n     */\n    children: _propTypes.default.node,\n\n    /**\n     * The initial color scheme used.\n     */\n    defaultColorScheme: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n\n    /**\n     * The initial mode used.\n     */\n    defaultMode: _propTypes.default.string,\n\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: _propTypes.default.string,\n\n    /**\n     * CSS variable prefix.\n     */\n    prefix: _propTypes.default.string,\n\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: _propTypes.default.object\n  } : void 0;\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript: _getInitColorSchemeScript.default\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$mui$system$ThemeProvider$index","~$module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose","~$module$node_modules$react$jsx_runtime","~$module$node_modules$$mui$utils$index","~$module$node_modules$$mui$system$createTheme$createSpacing","~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$module$node_modules$$mui$system$cssVars$getInitColorSchemeScript","~$module$node_modules$react$index","~$module$node_modules$prop_types$index","~$shadow.js","~$module$node_modules$$mui$styled_engine$node$index","~$module$node_modules$$babel$runtime$helpers$extends","~$module$node_modules$$mui$system$createTheme$createBreakpoints","~$module$node_modules$$mui$system$cssVars$useCurrentColorScheme","~$module$node_modules$$mui$system$cssVars$cssVarsParser","~$module$node_modules$$mui$system$cssVars$createGetCssVar"]],"~:properties",["^5",["defaultColorScheme","allColorSchemes","supportedColorSchemes","spacing","modeStorageKey","DISABLE_CSS_TRANSITION","setMode","prefix","breakpoints","getCssVar","children","__esModule","getInitColorSchemeScript","attribute","propTypes","mode","basePrefix","defaultDarkColorScheme","value","defaultMode","lightColorScheme","styles","current","colorScheme","setColorScheme","CssVarsProvider","darkColorScheme","components","colorSchemes","useColorScheme","theme","defaultLightColorScheme","shouldSkipGeneratingVar","default","vars"]],"~:compiled-at",1644840880605,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$system$cssVars$createCssVarsProvider.js\",\n\"lineCount\":16,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@mui/system/cssVars/createCssVarsProvider.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$system$cssVars$createCssVarsProvider\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.DISABLE_CSS_TRANSITION = void 0;\\nexports.default = createCssVarsProvider;\\n\\nvar _extends2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/extends\\\"));\\n\\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/objectWithoutPropertiesLoose\\\"));\\n\\nvar _utils = require(\\\"@mui/utils\\\");\\n\\nvar React = _interopRequireWildcard(require(\\\"react\\\"));\\n\\nvar _propTypes = _interopRequireDefault(require(\\\"prop-types\\\"));\\n\\nvar _styledEngine = require(\\\"@mui/styled-engine\\\");\\n\\nvar _createSpacing = _interopRequireDefault(require(\\\"../createTheme/createSpacing\\\"));\\n\\nvar _createBreakpoints = _interopRequireDefault(require(\\\"../createTheme/createBreakpoints\\\"));\\n\\nvar _cssVarsParser = _interopRequireDefault(require(\\\"./cssVarsParser\\\"));\\n\\nvar _ThemeProvider = _interopRequireDefault(require(\\\"../ThemeProvider\\\"));\\n\\nvar _getInitColorSchemeScript = _interopRequireWildcard(require(\\\"./getInitColorSchemeScript\\\"));\\n\\nvar _useCurrentColorScheme = _interopRequireDefault(require(\\\"./useCurrentColorScheme\\\"));\\n\\nvar _createGetCssVar = _interopRequireDefault(require(\\\"./createGetCssVar\\\"));\\n\\nvar _jsxRuntime = require(\\\"react/jsx-runtime\\\");\\n\\nconst _excluded = [\\\"colorSchemes\\\"],\\n      _excluded2 = [\\\"colorSchemes\\\"],\\n      _excluded3 = [\\\"components\\\"];\\n\\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \\\"function\\\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\\n\\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \\\"object\\\" && typeof obj !== \\\"function\\\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \\\"default\\\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\\n\\nconst DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\\nexports.DISABLE_CSS_TRANSITION = DISABLE_CSS_TRANSITION;\\n\\nfunction createCssVarsProvider(options) {\\n  var _baseTheme$breakpoint;\\n\\n  const {\\n    theme: baseTheme = {},\\n    defaultMode: desisgnSystemMode = 'light',\\n    defaultColorScheme: designSystemColorScheme,\\n    disableTransitionOnChange = false,\\n    enableColorScheme = true,\\n    prefix: designSystemPrefix = '',\\n    shouldSkipGeneratingVar\\n  } = options;\\n  const systemSpacing = (0, _createSpacing.default)(baseTheme.spacing);\\n  const systemBreakpoints = (0, _createBreakpoints.default)((_baseTheme$breakpoint = baseTheme.breakpoints) != null ? _baseTheme$breakpoint : {});\\n\\n  if (!baseTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !baseTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !baseTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !baseTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\\n    console.error(`MUI: \\\\`${designSystemColorScheme}\\\\` does not exist in \\\\`theme.colorSchemes\\\\`.`);\\n  }\\n\\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\\n\\n  const useColorScheme = () => {\\n    const value = React.useContext(ColorSchemeContext);\\n\\n    if (!value) {\\n      throw new Error(process.env.NODE_ENV !== \\\"production\\\" ? `MUI: \\\\`useColorScheme\\\\` must be called under <CssVarsProvider />` : (0, _utils.formatMuiErrorMessage)(19));\\n    }\\n\\n    return value;\\n  };\\n\\n  function CssVarsProvider({\\n    children,\\n    theme: themeProp = {},\\n    prefix = designSystemPrefix,\\n    modeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\\n    attribute = _getInitColorSchemeScript.DEFAULT_ATTRIBUTE,\\n    defaultMode = desisgnSystemMode,\\n    defaultColorScheme = designSystemColorScheme\\n  }) {\\n    // make sure that baseTheme is always independent of each <CssVarsProvider /> call.\\n    // JSON.parse(JSON.stringify(...)) is okay to be used as long as the baseTheme is a plain object.\\n    const clonedBaseTheme = React.useMemo(() => JSON.parse(JSON.stringify(baseTheme)), []);\\n    const {\\n      colorSchemes: baseColorSchemes = {}\\n    } = clonedBaseTheme,\\n          restBaseTheme = (0, _objectWithoutPropertiesLoose2.default)(clonedBaseTheme, _excluded);\\n    const {\\n      colorSchemes: colorSchemesProp = {}\\n    } = themeProp,\\n          restThemeProp = (0, _objectWithoutPropertiesLoose2.default)(themeProp, _excluded2);\\n    const hasMounted = React.useRef(false); // eslint-disable-next-line prefer-const\\n\\n    let _deepmerge = (0, _utils.deepmerge)(restBaseTheme, restThemeProp),\\n        {\\n      components = {}\\n    } = _deepmerge,\\n        mergedTheme = (0, _objectWithoutPropertiesLoose2.default)(_deepmerge, _excluded3);\\n\\n    const colorSchemes = (0, _utils.deepmerge)(baseColorSchemes, colorSchemesProp);\\n    const allColorSchemes = Object.keys(colorSchemes);\\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\\n    const {\\n      mode,\\n      setMode,\\n      systemMode,\\n      lightColorScheme,\\n      darkColorScheme,\\n      colorScheme,\\n      setColorScheme\\n    } = (0, _useCurrentColorScheme.default)({\\n      supportedColorSchemes: allColorSchemes,\\n      defaultLightColorScheme,\\n      defaultDarkColorScheme,\\n      modeStorageKey,\\n      defaultMode\\n    });\\n\\n    const resolvedColorScheme = (() => {\\n      if (!colorScheme) {\\n        // This scope occurs on the server\\n        if (defaultMode === 'dark') {\\n          return defaultDarkColorScheme;\\n        } // use light color scheme, if default mode is 'light' | 'auto'\\n\\n\\n        return defaultLightColorScheme;\\n      }\\n\\n      return colorScheme;\\n    })();\\n\\n    const {\\n      css: rootCss,\\n      vars: rootVars\\n    } = (0, _cssVarsParser.default)(mergedTheme, {\\n      prefix,\\n      basePrefix: designSystemPrefix,\\n      shouldSkipGeneratingVar\\n    });\\n    mergedTheme = (0, _extends2.default)({}, mergedTheme, colorSchemes[resolvedColorScheme], {\\n      components,\\n      colorSchemes,\\n      vars: rootVars,\\n      spacing: themeProp.spacing ? (0, _createSpacing.default)(themeProp.spacing) : systemSpacing,\\n      breakpoints: themeProp.breakpoints ? (0, _createBreakpoints.default)(themeProp.breakpoints) : systemBreakpoints,\\n      getCssVar: (0, _createGetCssVar.default)(prefix)\\n    });\\n    const styleSheet = {};\\n    Object.entries(colorSchemes).forEach(([key, scheme]) => {\\n      const {\\n        css,\\n        vars\\n      } = (0, _cssVarsParser.default)(scheme, {\\n        prefix,\\n        basePrefix: designSystemPrefix,\\n        shouldSkipGeneratingVar\\n      });\\n      mergedTheme.vars = (0, _utils.deepmerge)(mergedTheme.vars, vars);\\n\\n      const resolvedDefaultColorScheme = (() => {\\n        if (typeof defaultColorScheme === 'string') {\\n          return defaultColorScheme;\\n        }\\n\\n        if (defaultMode === 'dark') {\\n          return defaultColorScheme.dark;\\n        }\\n\\n        return defaultColorScheme.light;\\n      })();\\n\\n      if (key === resolvedDefaultColorScheme) {\\n        styleSheet[':root'] = css;\\n      } else {\\n        styleSheet[`[${attribute}=\\\"${key}\\\"]`] = css;\\n      }\\n    });\\n    React.useEffect(() => {\\n      if (colorScheme) {\\n        // attaches attribute to <html> because the css variables are attached to :root (html)\\n        document.documentElement.setAttribute(attribute, colorScheme);\\n      }\\n    }, [colorScheme, attribute]);\\n    (0, _utils.unstable_useEnhancedEffect)(() => {\\n      if (!mode || !enableColorScheme) {\\n        return undefined;\\n      }\\n\\n      const priorColorScheme = document.documentElement.style.getPropertyValue('color-scheme'); // `color-scheme` tells browser to render built-in elements according to its value: `light` or `dark`\\n\\n      if (mode === 'system') {\\n        document.documentElement.style.setProperty('color-scheme', systemMode);\\n      } else {\\n        document.documentElement.style.setProperty('color-scheme', mode);\\n      }\\n\\n      return () => {\\n        document.documentElement.style.setProperty('color-scheme', priorColorScheme);\\n      };\\n    }, [mode, systemMode]);\\n    React.useEffect(() => {\\n      let timer;\\n\\n      if (disableTransitionOnChange && hasMounted.current) {\\n        // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\\n        const css = document.createElement('style');\\n        css.appendChild(document.createTextNode(DISABLE_CSS_TRANSITION));\\n        document.head.appendChild(css); // Force browser repaint\\n\\n        (() => window.getComputedStyle(document.body))();\\n\\n        timer = setTimeout(() => {\\n          document.head.removeChild(css);\\n        }, 1);\\n      }\\n\\n      return () => {\\n        clearTimeout(timer);\\n      };\\n    }, [colorScheme]);\\n    React.useEffect(() => {\\n      hasMounted.current = true;\\n      return () => {\\n        hasMounted.current = false;\\n      };\\n    }, []);\\n    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(ColorSchemeContext.Provider, {\\n      value: {\\n        mode,\\n        setMode,\\n        lightColorScheme,\\n        darkColorScheme,\\n        colorScheme,\\n        setColorScheme,\\n        allColorSchemes\\n      },\\n      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\\n        styles: {\\n          ':root': rootCss\\n        }\\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\\n        styles: styleSheet\\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_ThemeProvider.default, {\\n        theme: mergedTheme,\\n        children: children\\n      })]\\n    });\\n  }\\n\\n  process.env.NODE_ENV !== \\\"production\\\" ? CssVarsProvider.propTypes = {\\n    /**\\n     * The body attribute name to attach colorScheme.\\n     */\\n    attribute: _propTypes.default.string,\\n\\n    /**\\n     * The component tree.\\n     */\\n    children: _propTypes.default.node,\\n\\n    /**\\n     * The initial color scheme used.\\n     */\\n    defaultColorScheme: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\\n\\n    /**\\n     * The initial mode used.\\n     */\\n    defaultMode: _propTypes.default.string,\\n\\n    /**\\n     * The key in the local storage used to store current color scheme.\\n     */\\n    modeStorageKey: _propTypes.default.string,\\n\\n    /**\\n     * CSS variable prefix.\\n     */\\n    prefix: _propTypes.default.string,\\n\\n    /**\\n     * The calculated theme object that will be passed through context.\\n     */\\n    theme: _propTypes.default.object\\n  } : void 0;\\n  return {\\n    CssVarsProvider,\\n    useColorScheme,\\n    getInitColorSchemeScript: _getInitColorSchemeScript.default\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_getRequireWildcardCache\",\"nodeInterop\",\"WeakMap\",\"cacheBabelInterop\",\"cacheNodeInterop\",\"_interopRequireWildcard\",\"obj\",\"__esModule\",\"default\",\"cache\",\"has\",\"get\",\"newObj\",\"hasPropertyDescriptor\",\"Object\",\"defineProperty\",\"getOwnPropertyDescriptor\",\"key\",\"prototype\",\"hasOwnProperty\",\"call\",\"desc\",\"set\",\"_interopRequireDefault\",\"value\",\"DISABLE_CSS_TRANSITION\",\"createCssVarsProvider\",\"options\",\"CssVarsProvider\",\"children\",\"themeProp\",\"prefix\",\"designSystemPrefix\",\"modeStorageKey\",\"_getInitColorSchemeScript\",\"DEFAULT_MODE_STORAGE_KEY\",\"attribute\",\"DEFAULT_ATTRIBUTE\",\"defaultMode\",\"desisgnSystemMode\",\"defaultColorScheme\",\"designSystemColorScheme\",\"clonedBaseTheme\",\"React\",\"useMemo\",\"JSON\",\"parse\",\"stringify\",\"baseTheme\",\"baseColorSchemes\",\"restBaseTheme\",\"_objectWithoutPropertiesLoose2\",\"_excluded\",\"colorSchemesProp\",\"restThemeProp\",\"_excluded2\",\"hasMounted\",\"useRef\",\"_deepmerge\",\"_utils\",\"deepmerge\",\"components\",\"mergedTheme\",\"_excluded3\",\"colorSchemes\",\"allColorSchemes\",\"keys\",\"defaultLightColorScheme\",\"light\",\"defaultDarkColorScheme\",\"dark\",\"mode\",\"setMode\",\"systemMode\",\"lightColorScheme\",\"darkColorScheme\",\"colorScheme\",\"setColorScheme\",\"_useCurrentColorScheme\",\"supportedColorSchemes\",\"resolvedColorScheme\",\"rootCss\",\"rootVars\",\"_cssVarsParser\",\"basePrefix\",\"shouldSkipGeneratingVar\",\"_extends2\",\"vars\",\"spacing\",\"_createSpacing\",\"systemSpacing\",\"breakpoints\",\"_createBreakpoints\",\"systemBreakpoints\",\"getCssVar\",\"_createGetCssVar\",\"styleSheet\",\"entries\",\"forEach\",\"scheme\",\"css\",\"resolvedDefaultColorScheme\",\"useEffect\",\"document\",\"documentElement\",\"setAttribute\",\"unstable_useEnhancedEffect\",\"enableColorScheme\",\"priorColorScheme\",\"style\",\"getPropertyValue\",\"setProperty\",\"timer\",\"disableTransitionOnChange\",\"current\",\"createElement\",\"appendChild\",\"createTextNode\",\"head\",\"window\",\"getComputedStyle\",\"body\",\"setTimeout\",\"removeChild\",\"clearTimeout\",\"_jsxRuntime\",\"jsxs\",\"ColorSchemeContext\",\"Provider\",\"jsx\",\"_styledEngine\",\"GlobalStyles\",\"styles\",\"_ThemeProvider\",\"theme\",\"_baseTheme$breakpoint\",\"console\",\"error\",\"createContext\",\"undefined\",\"propTypes\",\"_propTypes\",\"string\",\"node\",\"oneOfType\",\"object\",\"useColorScheme\",\"useContext\",\"Error\",\"getInitColorSchemeScript\"]\n}\n"]