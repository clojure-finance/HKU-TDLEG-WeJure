["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/system/cssVars/cssVarsParser.js"],"~:js","shadow$provide.module$node_modules$$mui$system$cssVars$cssVarsParser=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.assignNestedKeys=void 0;exports.default=function(theme,options){const {prefix,basePrefix=\"\",shouldSkipGeneratingVar}=options||{},css={},vars={};walkObjectDeep(theme,(keys,val,scope)=>{if(\"string\"===typeof val||\"number\"===typeof val)if(\"string\"===typeof val&&val.startsWith(\"var\")&&(val=!basePrefix&&prefix?val.replace(/var\\(--/g,\n`var(--${prefix}-`):prefix?val.replace(new RegExp(basePrefix,\"g\"),prefix):val.replace(new RegExp(`${basePrefix}-`,\"g\"),\"\"),scope[keys.slice(-1)[0]]=val),!shouldSkipGeneratingVar||shouldSkipGeneratingVar&&!shouldSkipGeneratingVar(keys,val))scope=`--${prefix?`${prefix}-`:\"\"}${keys.join(\"-\")}`,Object.assign(css,{[scope]:getCssValue(keys,val)}),assignNestedKeys(vars,keys,`var(${scope})`)},keys=>\"vars\"===keys[0]);return{css,vars}};exports.walkObjectDeep=void 0;const assignNestedKeys=(obj,keys,value)=>\n{let temp=obj;keys.forEach((k,index)=>{index===keys.length-1?temp&&\"object\"===typeof temp&&(temp[k]=value):temp&&\"object\"===typeof temp&&(temp[k]||(temp[k]={}),temp=temp[k])})};exports.assignNestedKeys=assignNestedKeys;const walkObjectDeep=(obj,callback,shouldSkipPaths)=>{function recurse(object,parentKeys=[]){Object.entries(object).forEach(([key,value])=>{(!shouldSkipPaths||shouldSkipPaths&&!shouldSkipPaths([...parentKeys,key]))&&void 0!==value&&null!==value&&(\"object\"===typeof value&&0<Object.keys(value).length?\nrecurse(value,[...parentKeys,key]):callback([...parentKeys,key],value,object))})}recurse(obj)};exports.walkObjectDeep=walkObjectDeep;const getCssValue=(keys,value)=>\"number\"===typeof value?[\"lineHeight\",\"fontWeight\",\"opacity\",\"zIndex\"].some(prop=>keys.includes(prop))?value:`${value}px`:value}","~:source","shadow$provide[\"module$node_modules$$mui$system$cssVars$cssVarsParser\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assignNestedKeys = void 0;\nexports.default = cssVarsParser;\nexports.walkObjectDeep = void 0;\n\n/**\n * This function create an object from keys, value and then assign to target\n *\n * @param {Object} obj : the target object to be assigned\n * @param {string[]} keys\n * @param {string | number} value\n *\n * @example\n * const source = {}\n * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }\n *\n * @example\n * const source = { palette: { primary: 'var(--palette-primary)' } }\n * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }\n */\nconst assignNestedKeys = (obj, keys, value) => {\n  let temp = obj;\n  keys.forEach((k, index) => {\n    if (index === keys.length - 1) {\n      if (temp && typeof temp === 'object') {\n        temp[k] = value;\n      }\n    } else if (temp && typeof temp === 'object') {\n      if (!temp[k]) {\n        temp[k] = {};\n      }\n\n      temp = temp[k];\n    }\n  });\n};\n/**\n *\n * @param {Object} obj : source object\n * @param {Function} callback : a function that will be called when\n *                   - the deepest key in source object is reached\n *                   - the value of the deepest key is NOT `undefined` | `null`\n *\n * @example\n * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)\n * // ['palette', 'primary', 'main'] '#000000'\n */\n\n\nexports.assignNestedKeys = assignNestedKeys;\n\nconst walkObjectDeep = (obj, callback, shouldSkipPaths) => {\n  function recurse(object, parentKeys = []) {\n    Object.entries(object).forEach(([key, value]) => {\n      if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([...parentKeys, key])) {\n        if (value !== undefined && value !== null) {\n          if (typeof value === 'object' && Object.keys(value).length > 0) {\n            recurse(value, [...parentKeys, key]);\n          } else {\n            callback([...parentKeys, key], value, object);\n          }\n        }\n      }\n    });\n  }\n\n  recurse(obj);\n};\n\nexports.walkObjectDeep = walkObjectDeep;\n\nconst getCssValue = (keys, value) => {\n  if (typeof value === 'number') {\n    if (['lineHeight', 'fontWeight', 'opacity', 'zIndex'].some(prop => keys.includes(prop))) {\n      // CSS property that are unitless\n      return value;\n    }\n\n    return `${value}px`;\n  }\n\n  return value;\n};\n/**\n * a function that parse theme and return { css, vars }\n *\n * @param {Object} theme\n * @param {{\n *  prefix?: string,\n *  basePrefix?: string,\n *  shouldSkipGeneratingVar?: (objectPathKeys: Array<string>, value: string | number) => boolean\n * }} options.\n *  `basePrefix`: defined by design system.\n *  `prefix`: defined by application\n *\n *   This function also mutate the string value of theme input by replacing `basePrefix` (if existed) with `prefix`\n *\n * @returns {{ css: Object, vars: Object }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme)\n *\n * @example\n * const { css, vars } = parser({\n *   fontSize: 12,\n *   lineHeight: 1.2,\n *   palette: { primary: { 500: '#000000' } }\n * })\n *\n * console.log(css) // { '--fontSize': '12px', '--lineHeight': 1.2, '--palette-primary-500': '#000000' }\n * console.log(vars) // { fontSize: '--fontSize', lineHeight: '--lineHeight', palette: { primary: { 500: 'var(--palette-primary-500)' } } }\n */\n\n\nfunction cssVarsParser(theme, options) {\n  const {\n    prefix,\n    basePrefix = '',\n    shouldSkipGeneratingVar\n  } = options || {};\n  const css = {};\n  const vars = {};\n  walkObjectDeep(theme, (keys, val, scope) => {\n    if (typeof val === 'string' || typeof val === 'number') {\n      let value = val;\n\n      if (typeof value === 'string' && value.startsWith('var')) {\n        // replace the value of the `scope` object with the prefix or remove basePrefix from the value\n        if (!basePrefix && prefix) {\n          value = value.replace(/var\\(--/g, `var(--${prefix}-`);\n        } else {\n          value = prefix ? value.replace(new RegExp(basePrefix, 'g'), prefix) : value.replace(new RegExp(`${basePrefix}-`, 'g'), '');\n        } // scope is the deepest object in the tree, keys is the theme path keys\n\n\n        scope[keys.slice(-1)[0]] = value;\n      }\n\n      if (!shouldSkipGeneratingVar || shouldSkipGeneratingVar && !shouldSkipGeneratingVar(keys, value)) {\n        // only create css & var if `shouldSkipGeneratingVar` return false\n        const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;\n        Object.assign(css, {\n          [cssVar]: getCssValue(keys, value)\n        });\n        assignNestedKeys(vars, keys, `var(${cssVar})`);\n      }\n    }\n  }, keys => keys[0] === 'vars' // skip 'vars/*' paths\n  );\n  return {\n    css,\n    vars\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["walkObjectDeep","css","__esModule","value","assignNestedKeys","default","vars"]],"~:compiled-at",1644840880599,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$system$cssVars$cssVarsParser.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@mui/system/cssVars/cssVarsParser.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$system$cssVars$cssVarsParser\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.assignNestedKeys = void 0;\\nexports.default = cssVarsParser;\\nexports.walkObjectDeep = void 0;\\n\\n/**\\n * This function create an object from keys, value and then assign to target\\n *\\n * @param {Object} obj : the target object to be assigned\\n * @param {string[]} keys\\n * @param {string | number} value\\n *\\n * @example\\n * const source = {}\\n * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')\\n * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }\\n *\\n * @example\\n * const source = { palette: { primary: 'var(--palette-primary)' } }\\n * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')\\n * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }\\n */\\nconst assignNestedKeys = (obj, keys, value) => {\\n  let temp = obj;\\n  keys.forEach((k, index) => {\\n    if (index === keys.length - 1) {\\n      if (temp && typeof temp === 'object') {\\n        temp[k] = value;\\n      }\\n    } else if (temp && typeof temp === 'object') {\\n      if (!temp[k]) {\\n        temp[k] = {};\\n      }\\n\\n      temp = temp[k];\\n    }\\n  });\\n};\\n/**\\n *\\n * @param {Object} obj : source object\\n * @param {Function} callback : a function that will be called when\\n *                   - the deepest key in source object is reached\\n *                   - the value of the deepest key is NOT `undefined` | `null`\\n *\\n * @example\\n * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)\\n * // ['palette', 'primary', 'main'] '#000000'\\n */\\n\\n\\nexports.assignNestedKeys = assignNestedKeys;\\n\\nconst walkObjectDeep = (obj, callback, shouldSkipPaths) => {\\n  function recurse(object, parentKeys = []) {\\n    Object.entries(object).forEach(([key, value]) => {\\n      if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([...parentKeys, key])) {\\n        if (value !== undefined && value !== null) {\\n          if (typeof value === 'object' && Object.keys(value).length > 0) {\\n            recurse(value, [...parentKeys, key]);\\n          } else {\\n            callback([...parentKeys, key], value, object);\\n          }\\n        }\\n      }\\n    });\\n  }\\n\\n  recurse(obj);\\n};\\n\\nexports.walkObjectDeep = walkObjectDeep;\\n\\nconst getCssValue = (keys, value) => {\\n  if (typeof value === 'number') {\\n    if (['lineHeight', 'fontWeight', 'opacity', 'zIndex'].some(prop => keys.includes(prop))) {\\n      // CSS property that are unitless\\n      return value;\\n    }\\n\\n    return `${value}px`;\\n  }\\n\\n  return value;\\n};\\n/**\\n * a function that parse theme and return { css, vars }\\n *\\n * @param {Object} theme\\n * @param {{\\n *  prefix?: string,\\n *  basePrefix?: string,\\n *  shouldSkipGeneratingVar?: (objectPathKeys: Array<string>, value: string | number) => boolean\\n * }} options.\\n *  `basePrefix`: defined by design system.\\n *  `prefix`: defined by application\\n *\\n *   This function also mutate the string value of theme input by replacing `basePrefix` (if existed) with `prefix`\\n *\\n * @returns {{ css: Object, vars: Object }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme)\\n *\\n * @example\\n * const { css, vars } = parser({\\n *   fontSize: 12,\\n *   lineHeight: 1.2,\\n *   palette: { primary: { 500: '#000000' } }\\n * })\\n *\\n * console.log(css) // { '--fontSize': '12px', '--lineHeight': 1.2, '--palette-primary-500': '#000000' }\\n * console.log(vars) // { fontSize: '--fontSize', lineHeight: '--lineHeight', palette: { primary: { 500: 'var(--palette-primary-500)' } } }\\n */\\n\\n\\nfunction cssVarsParser(theme, options) {\\n  const {\\n    prefix,\\n    basePrefix = '',\\n    shouldSkipGeneratingVar\\n  } = options || {};\\n  const css = {};\\n  const vars = {};\\n  walkObjectDeep(theme, (keys, val, scope) => {\\n    if (typeof val === 'string' || typeof val === 'number') {\\n      let value = val;\\n\\n      if (typeof value === 'string' && value.startsWith('var')) {\\n        // replace the value of the `scope` object with the prefix or remove basePrefix from the value\\n        if (!basePrefix && prefix) {\\n          value = value.replace(/var\\\\(--/g, `var(--${prefix}-`);\\n        } else {\\n          value = prefix ? value.replace(new RegExp(basePrefix, 'g'), prefix) : value.replace(new RegExp(`${basePrefix}-`, 'g'), '');\\n        } // scope is the deepest object in the tree, keys is the theme path keys\\n\\n\\n        scope[keys.slice(-1)[0]] = value;\\n      }\\n\\n      if (!shouldSkipGeneratingVar || shouldSkipGeneratingVar && !shouldSkipGeneratingVar(keys, value)) {\\n        // only create css & var if `shouldSkipGeneratingVar` return false\\n        const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;\\n        Object.assign(css, {\\n          [cssVar]: getCssValue(keys, value)\\n        });\\n        assignNestedKeys(vars, keys, `var(${cssVar})`);\\n      }\\n    }\\n  }, keys => keys[0] === 'vars' // skip 'vars/*' paths\\n  );\\n  return {\\n    css,\\n    vars\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"assignNestedKeys\",\"default\",\"cssVarsParser\",\"theme\",\"options\",\"prefix\",\"basePrefix\",\"shouldSkipGeneratingVar\",\"css\",\"vars\",\"walkObjectDeep\",\"keys\",\"val\",\"scope\",\"startsWith\",\"replace\",\"RegExp\",\"slice\",\"cssVar\",\"join\",\"assign\",\"getCssValue\",\"obj\",\"temp\",\"forEach\",\"k\",\"index\",\"length\",\"callback\",\"shouldSkipPaths\",\"recurse\",\"object\",\"parentKeys\",\"entries\",\"key\",\"undefined\",\"some\",\"prop\",\"includes\"]\n}\n"]