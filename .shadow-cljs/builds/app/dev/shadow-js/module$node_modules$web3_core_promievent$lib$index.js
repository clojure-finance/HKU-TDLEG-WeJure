["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/web3-core-promievent/lib/index.js"],"~:js","shadow$provide.module$node_modules$web3_core_promievent$lib$index=function(global,require,module,exports){var EventEmitter=require(\"module$node_modules$eventemitter3$index\"),PromiEvent=function(justPromise){var resolve,reject,eventEmitter=new Promise(function(JSCompiler_OptimizeArgumentsArray_p4,JSCompiler_OptimizeArgumentsArray_p5){resolve=JSCompiler_OptimizeArgumentsArray_p4;reject=JSCompiler_OptimizeArgumentsArray_p5});if(justPromise)return{resolve,reject,eventEmitter};justPromise=new EventEmitter;\neventEmitter._events=justPromise._events;eventEmitter.emit=justPromise.emit;eventEmitter.on=justPromise.on;eventEmitter.once=justPromise.once;eventEmitter.off=justPromise.off;eventEmitter.listeners=justPromise.listeners;eventEmitter.addListener=justPromise.addListener;eventEmitter.removeListener=justPromise.removeListener;eventEmitter.removeAllListeners=justPromise.removeAllListeners;return{resolve,reject,eventEmitter}};PromiEvent.resolve=function(value){var promise=PromiEvent(!0);promise.resolve(value);\nreturn promise.eventEmitter};module.exports=PromiEvent}","~:source","shadow$provide[\"module$node_modules$web3_core_promievent$lib$index\"] = function(global,require,module,exports) {\n/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2016\n */\n\"use strict\";\nvar EventEmitter = require('eventemitter3');\n/**\n * This function generates a defer promise and adds eventEmitter functionality to it\n *\n * @method eventifiedPromise\n */\nvar PromiEvent = function PromiEvent(justPromise) {\n    var resolve, reject, eventEmitter = new Promise(function () {\n        resolve = arguments[0];\n        reject = arguments[1];\n    });\n    if (justPromise) {\n        return {\n            resolve: resolve,\n            reject: reject,\n            eventEmitter: eventEmitter\n        };\n    }\n    // get eventEmitter\n    var emitter = new EventEmitter();\n    // add eventEmitter to the promise\n    eventEmitter._events = emitter._events;\n    eventEmitter.emit = emitter.emit;\n    eventEmitter.on = emitter.on;\n    eventEmitter.once = emitter.once;\n    eventEmitter.off = emitter.off;\n    eventEmitter.listeners = emitter.listeners;\n    eventEmitter.addListener = emitter.addListener;\n    eventEmitter.removeListener = emitter.removeListener;\n    eventEmitter.removeAllListeners = emitter.removeAllListeners;\n    return {\n        resolve: resolve,\n        reject: reject,\n        eventEmitter: eventEmitter\n    };\n};\nPromiEvent.resolve = function (value) {\n    var promise = PromiEvent(true);\n    promise.resolve(value);\n    return promise.eventEmitter;\n};\nmodule.exports = PromiEvent;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$eventemitter3$index","~$shadow.js"]],"~:properties",["^5",["resolve","_events","once","off","removeAllListeners","removeListener","addListener","eventEmitter","emit","on","reject","listeners"]],"~:compiled-at",1644840880153,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$web3_core_promievent$lib$index.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,kDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAuB/G,IAAIC,aAAeH,OAAA,CAAQ,yCAAR,CAAnB,CAMII,WAAaA,QAAmB,CAACC,WAAD,CAAc,CAAA,IAC1CC,OAD0C,CACjCC,MADiC,CACzBC,aAAe,IAAIC,OAAJ,CAAY,QAAS,CAAA,oCAAA,CAAA,oCAAA,CAAG,CACxDH,OAAA,CAAU,oCACVC,OAAA,CAAS,oCAF+C,CAAxB,CAIpC,IAAIF,WAAJ,CACI,MAAO,CACMC,OADN,CAEKC,MAFL,CAGWC,YAHX,CAOPE,YAAAA,CAAU,IAAIP,YAElBK;YAAaG,CAAAA,OAAb,CAAuBD,WAAQC,CAAAA,OAC/BH,aAAaI,CAAAA,IAAb,CAAoBF,WAAQE,CAAAA,IAC5BJ,aAAaK,CAAAA,EAAb,CAAkBH,WAAQG,CAAAA,EAC1BL,aAAaM,CAAAA,IAAb,CAAoBJ,WAAQI,CAAAA,IAC5BN,aAAaO,CAAAA,GAAb,CAAmBL,WAAQK,CAAAA,GAC3BP,aAAaQ,CAAAA,SAAb,CAAyBN,WAAQM,CAAAA,SACjCR,aAAaS,CAAAA,WAAb,CAA2BP,WAAQO,CAAAA,WACnCT,aAAaU,CAAAA,cAAb,CAA8BR,WAAQQ,CAAAA,cACtCV,aAAaW,CAAAA,kBAAb,CAAkCT,WAAQS,CAAAA,kBAC1C,OAAO,CACMb,OADN,CAEKC,MAFL,CAGWC,YAHX,CAxBuC,CA8BlDJ,WAAWE,CAAAA,OAAX,CAAqBc,QAAS,CAACC,KAAD,CAAQ,CAClC,IAAIC,QAAUlB,UAAA,CAAW,CAAA,CAAX,CACdkB,QAAQhB,CAAAA,OAAR,CAAgBe,KAAhB,CACA;MAAOC,QAAQd,CAAAA,YAHmB,CAKtCP,OAAOC,CAAAA,OAAP,CAAiBE,UAhE8F;\",\n\"sources\":[\"node_modules/web3-core-promievent/lib/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$web3_core_promievent$lib$index\\\"] = function(global,require,module,exports) {\\n/*\\n This file is part of web3.js.\\n\\n web3.js is free software: you can redistribute it and/or modify\\n it under the terms of the GNU Lesser General Public License as published by\\n the Free Software Foundation, either version 3 of the License, or\\n (at your option) any later version.\\n\\n web3.js is distributed in the hope that it will be useful,\\n but WITHOUT ANY WARRANTY; without even the implied warranty of\\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n GNU Lesser General Public License for more details.\\n\\n You should have received a copy of the GNU Lesser General Public License\\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\\n */\\n/**\\n * @file index.js\\n * @author Fabian Vogelsteller <fabian@ethereum.org>\\n * @date 2016\\n */\\n\\\"use strict\\\";\\nvar EventEmitter = require('eventemitter3');\\n/**\\n * This function generates a defer promise and adds eventEmitter functionality to it\\n *\\n * @method eventifiedPromise\\n */\\nvar PromiEvent = function PromiEvent(justPromise) {\\n    var resolve, reject, eventEmitter = new Promise(function () {\\n        resolve = arguments[0];\\n        reject = arguments[1];\\n    });\\n    if (justPromise) {\\n        return {\\n            resolve: resolve,\\n            reject: reject,\\n            eventEmitter: eventEmitter\\n        };\\n    }\\n    // get eventEmitter\\n    var emitter = new EventEmitter();\\n    // add eventEmitter to the promise\\n    eventEmitter._events = emitter._events;\\n    eventEmitter.emit = emitter.emit;\\n    eventEmitter.on = emitter.on;\\n    eventEmitter.once = emitter.once;\\n    eventEmitter.off = emitter.off;\\n    eventEmitter.listeners = emitter.listeners;\\n    eventEmitter.addListener = emitter.addListener;\\n    eventEmitter.removeListener = emitter.removeListener;\\n    eventEmitter.removeAllListeners = emitter.removeAllListeners;\\n    return {\\n        resolve: resolve,\\n        reject: reject,\\n        eventEmitter: eventEmitter\\n    };\\n};\\nPromiEvent.resolve = function (value) {\\n    var promise = PromiEvent(true);\\n    promise.resolve(value);\\n    return promise.eventEmitter;\\n};\\nmodule.exports = PromiEvent;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"EventEmitter\",\"PromiEvent\",\"justPromise\",\"resolve\",\"reject\",\"eventEmitter\",\"Promise\",\"emitter\",\"_events\",\"emit\",\"on\",\"once\",\"off\",\"listeners\",\"addListener\",\"removeListener\",\"removeAllListeners\",\"PromiEvent.resolve\",\"value\",\"promise\"]\n}\n"]