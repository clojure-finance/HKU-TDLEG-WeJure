["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/browserify-des/index.js"],"~:js","shadow$provide.module$node_modules$browserify_des$index=function(global,require,module,exports){function DES(opts){CipherBase.call(this);var modeName=opts.mode.toLowerCase(),mode=modes[modeName];var type=opts.decrypt?\"decrypt\":\"encrypt\";var key=opts.key;Buffer.isBuffer(key)||(key=Buffer.from(key));if(\"des-ede\"===modeName||\"des-ede-cbc\"===modeName)key=Buffer.concat([key,key.slice(0,8)]);opts=opts.iv;Buffer.isBuffer(opts)||(opts=Buffer.from(opts));this._des=mode.create({key,iv:opts,type})}var CipherBase=\nrequire(\"module$node_modules$cipher_base$index\");global=require(\"module$node_modules$des_DOT_js$lib$des\");exports=require(\"module$node_modules$inherits$inherits_browser\");var Buffer=require(\"module$node_modules$safe_buffer$index\").Buffer,modes={\"des-ede3-cbc\":global.CBC.instantiate(global.EDE),\"des-ede3\":global.EDE,\"des-ede-cbc\":global.CBC.instantiate(global.EDE),\"des-ede\":global.EDE,\"des-cbc\":global.CBC.instantiate(global.DES),\"des-ecb\":global.DES};modes.des=modes[\"des-cbc\"];modes.des3=modes[\"des-ede3-cbc\"];\nmodule.exports=DES;exports(DES,CipherBase);DES.prototype._update=function(data){return Buffer.from(this._des.update(data))};DES.prototype._final=function(){return Buffer.from(this._des.final())}}","~:source","shadow$provide[\"module$node_modules$browserify_des$index\"] = function(global,require,module,exports) {\nvar CipherBase = require('cipher-base')\nvar des = require('des.js')\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n}\nmodes.des = modes['des-cbc']\nmodes.des3 = modes['des-ede3-cbc']\nmodule.exports = DES\ninherits(DES, CipherBase)\nfunction DES (opts) {\n  CipherBase.call(this)\n  var modeName = opts.mode.toLowerCase()\n  var mode = modes[modeName]\n  var type\n  if (opts.decrypt) {\n    type = 'decrypt'\n  } else {\n    type = 'encrypt'\n  }\n  var key = opts.key\n  if (!Buffer.isBuffer(key)) {\n    key = Buffer.from(key)\n  }\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)])\n  }\n  var iv = opts.iv\n  if (!Buffer.isBuffer(iv)) {\n    iv = Buffer.from(iv)\n  }\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  })\n}\nDES.prototype._update = function (data) {\n  return Buffer.from(this._des.update(data))\n}\nDES.prototype._final = function () {\n  return Buffer.from(this._des.final())\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$cipher_base$index","~$shadow.js","~$module$node_modules$inherits$inherits_browser","~$module$node_modules$safe_buffer$index","~$module$node_modules$des_DOT_js$lib$des"]],"~:properties",["^5",["iv","des","key","des3","_des","type","_final","_update"]],"~:compiled-at",1644840879908,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$browserify_des$index.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkBrGC,QAASA,IAAI,CAACC,IAAD,CAAO,CAClBC,UAAWC,CAAAA,IAAX,CAAgB,IAAhB,CACA,KAAIC,SAAWH,IAAKI,CAAAA,IAAKC,CAAAA,WAAV,EAAf,CACID,KAAOE,KAAA,CAAMH,QAAN,CAGT,KAAAI,KADEP,IAAKQ,CAAAA,OAAT,CACS,SADT,CAGS,SAET,KAAIC,IAAMT,IAAKS,CAAAA,GACVC,OAAOC,CAAAA,QAAP,CAAgBF,GAAhB,CAAL,GACEA,GADF,CACQC,MAAOE,CAAAA,IAAP,CAAYH,GAAZ,CADR,CAGA,IAAiB,SAAjB,GAAIN,QAAJ,EAA2C,aAA3C,GAA8BA,QAA9B,CACEM,GAAA,CAAMC,MAAOG,CAAAA,MAAP,CAAc,CAACJ,GAAD,CAAMA,GAAIK,CAAAA,KAAJ,CAAU,CAAV,CAAa,CAAb,CAAN,CAAd,CAEJC,KAAAA,CAAKf,IAAKe,CAAAA,EACTL,OAAOC,CAAAA,QAAP,CAAgBI,IAAhB,CAAL,GACEA,IADF,CACOL,MAAOE,CAAAA,IAAP,CAAYG,IAAZ,CADP,CAGA,KAAKC,CAAAA,IAAL,CAAYZ,IAAKa,CAAAA,MAAL,CAAY,CACjBR,GADiB,CAEtBM,GAAIA,IAFkB,CAGhBR,IAHgB,CAAZ,CArBM,CAjBpB,IAAIN;AAAaL,OAAA,CAAQ,uCAAR,CACbsB,OAAAA,CAAMtB,OAAA,CAAQ,wCAAR,CACNuB,QAAAA,CAAWvB,OAAA,CAAQ,+CAAR,CACf,KAAIc,OAASd,OAAA,CAAQ,uCAAR,CAAuBc,CAAAA,MAApC,CAEIJ,MAAQ,CACV,eAAgBY,MAAIE,CAAAA,GAAIC,CAAAA,WAAR,CAAoBH,MAAII,CAAAA,GAAxB,CADN,CAEV,WAAYJ,MAAII,CAAAA,GAFN,CAGV,cAAeJ,MAAIE,CAAAA,GAAIC,CAAAA,WAAR,CAAoBH,MAAII,CAAAA,GAAxB,CAHL,CAIV,UAAWJ,MAAII,CAAAA,GAJL,CAKV,UAAWJ,MAAIE,CAAAA,GAAIC,CAAAA,WAAR,CAAoBH,MAAInB,CAAAA,GAAxB,CALD,CAMV,UAAWmB,MAAInB,CAAAA,GANL,CAQZO,MAAMY,CAAAA,GAAN,CAAYZ,KAAA,CAAM,SAAN,CACZA,MAAMiB,CAAAA,IAAN,CAAajB,KAAA,CAAM,cAAN,CACbT;MAAOC,CAAAA,OAAP,CAAiBC,GACjBoB,QAAA,CAASpB,GAAT,CAAcE,UAAd,CA4BAF,IAAIyB,CAAAA,SAAUC,CAAAA,OAAd,CAAwBC,QAAS,CAACC,IAAD,CAAO,CACtC,MAAOjB,OAAOE,CAAAA,IAAP,CAAY,IAAKI,CAAAA,IAAKY,CAAAA,MAAV,CAAiBD,IAAjB,CAAZ,CAD+B,CAGxC5B,IAAIyB,CAAAA,SAAUK,CAAAA,MAAd,CAAuBC,QAAS,EAAG,CACjC,MAAOpB,OAAOE,CAAAA,IAAP,CAAY,IAAKI,CAAAA,IAAKe,CAAAA,KAAV,EAAZ,CAD0B,CAhDkE;\",\n\"sources\":[\"node_modules/browserify-des/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$browserify_des$index\\\"] = function(global,require,module,exports) {\\nvar CipherBase = require('cipher-base')\\nvar des = require('des.js')\\nvar inherits = require('inherits')\\nvar Buffer = require('safe-buffer').Buffer\\n\\nvar modes = {\\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\\n  'des-ede3': des.EDE,\\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\\n  'des-ede': des.EDE,\\n  'des-cbc': des.CBC.instantiate(des.DES),\\n  'des-ecb': des.DES\\n}\\nmodes.des = modes['des-cbc']\\nmodes.des3 = modes['des-ede3-cbc']\\nmodule.exports = DES\\ninherits(DES, CipherBase)\\nfunction DES (opts) {\\n  CipherBase.call(this)\\n  var modeName = opts.mode.toLowerCase()\\n  var mode = modes[modeName]\\n  var type\\n  if (opts.decrypt) {\\n    type = 'decrypt'\\n  } else {\\n    type = 'encrypt'\\n  }\\n  var key = opts.key\\n  if (!Buffer.isBuffer(key)) {\\n    key = Buffer.from(key)\\n  }\\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\\n    key = Buffer.concat([key, key.slice(0, 8)])\\n  }\\n  var iv = opts.iv\\n  if (!Buffer.isBuffer(iv)) {\\n    iv = Buffer.from(iv)\\n  }\\n  this._des = mode.create({\\n    key: key,\\n    iv: iv,\\n    type: type\\n  })\\n}\\nDES.prototype._update = function (data) {\\n  return Buffer.from(this._des.update(data))\\n}\\nDES.prototype._final = function () {\\n  return Buffer.from(this._des.final())\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"DES\",\"opts\",\"CipherBase\",\"call\",\"modeName\",\"mode\",\"toLowerCase\",\"modes\",\"type\",\"decrypt\",\"key\",\"Buffer\",\"isBuffer\",\"from\",\"concat\",\"slice\",\"iv\",\"_des\",\"create\",\"des\",\"inherits\",\"CBC\",\"instantiate\",\"EDE\",\"des3\",\"prototype\",\"_update\",\"DES.prototype._update\",\"data\",\"update\",\"_final\",\"DES.prototype._final\",\"final\"]\n}\n"]