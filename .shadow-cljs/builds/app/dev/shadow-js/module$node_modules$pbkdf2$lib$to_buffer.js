["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/pbkdf2/lib/to-buffer.js"],"~:js","shadow$provide.module$node_modules$pbkdf2$lib$to_buffer=function(global,require,module,exports){var Buffer=require(\"module$node_modules$safe_buffer$index\").Buffer;module.exports=function(thing,encoding,name){if(Buffer.isBuffer(thing))return thing;if(\"string\"===typeof thing)return Buffer.from(thing,encoding);if(ArrayBuffer.isView(thing))return Buffer.from(thing.buffer);throw new TypeError(name+\" must be a string, a Buffer, a typed array or a DataView\");}}","~:source","shadow$provide[\"module$node_modules$pbkdf2$lib$to_buffer\"] = function(global,require,module,exports) {\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (thing, encoding, name) {\n  if (Buffer.isBuffer(thing)) {\n    return thing\n  } else if (typeof thing === 'string') {\n    return Buffer.from(thing, encoding)\n  } else if (ArrayBuffer.isView(thing)) {\n    return Buffer.from(thing.buffer)\n  } else {\n    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')\n  }\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$safe_buffer$index"]],"~:properties",["^5",[]],"~:compiled-at",1644840879904,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$pbkdf2$lib$to_buffer.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACrG,IAAIC,OAASH,OAAA,CAAQ,uCAAR,CAAuBG,CAAAA,MAEpCF,OAAOC,CAAAA,OAAP,CAAiBE,QAAS,CAACC,KAAD,CAAQC,QAAR,CAAkBC,IAAlB,CAAwB,CAChD,GAAIJ,MAAOK,CAAAA,QAAP,CAAgBH,KAAhB,CAAJ,CACE,MAAOA,MACF,IAAqB,QAArB,GAAI,MAAOA,MAAX,CACL,MAAOF,OAAOM,CAAAA,IAAP,CAAYJ,KAAZ,CAAmBC,QAAnB,CACF,IAAII,WAAYC,CAAAA,MAAZ,CAAmBN,KAAnB,CAAJ,CACL,MAAOF,OAAOM,CAAAA,IAAP,CAAYJ,KAAMO,CAAAA,MAAlB,CAEP,MAAM,KAAIC,SAAJ,CAAcN,IAAd,CAAqB,0DAArB,CAAN,CAR8C,CAHmD;\",\n\"sources\":[\"node_modules/pbkdf2/lib/to-buffer.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$pbkdf2$lib$to_buffer\\\"] = function(global,require,module,exports) {\\nvar Buffer = require('safe-buffer').Buffer\\n\\nmodule.exports = function (thing, encoding, name) {\\n  if (Buffer.isBuffer(thing)) {\\n    return thing\\n  } else if (typeof thing === 'string') {\\n    return Buffer.from(thing, encoding)\\n  } else if (ArrayBuffer.isView(thing)) {\\n    return Buffer.from(thing.buffer)\\n  } else {\\n    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')\\n  }\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Buffer\",\"module.exports\",\"thing\",\"encoding\",\"name\",\"isBuffer\",\"from\",\"ArrayBuffer\",\"isView\",\"buffer\",\"TypeError\"]\n}\n"]