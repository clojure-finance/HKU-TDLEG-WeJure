["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/eth-ens-namehash/index.js"],"~:js","shadow$provide.module$node_modules$eth_ens_namehash$index=function(global,require,module,exports){function normalize(name){return name?uts46.toUnicode(name,{useStd3ASCII:!0,transitional:!1}):name}var Buffer=require(\"module$node_modules$buffer$index\").Buffer,sha3=require(\"module$node_modules$eth_ens_namehash$node_modules$js_sha3$src$sha3\").keccak_256,uts46=require(\"module$node_modules$idna_uts46_hx$uts46\");exports.hash=function(inputName){for(var node=\"\",i=0;32>i;i++)node+=\"00\";if(name=normalize(inputName))for(inputName=\nname.split(\".\"),i=inputName.length-1;0<=i;i--){var labelSha=sha3(inputName[i]);node=sha3(new Buffer(node+labelSha,\"hex\"))}return\"0x\"+node};exports.normalize=normalize}","~:source","shadow$provide[\"module$node_modules$eth_ens_namehash$index\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\nvar sha3 = require('js-sha3').keccak_256\nvar uts46 = require('idna-uts46-hx')\n\nfunction namehash (inputName) {\n  // Reject empty names:\n  var node = ''\n  for (var i = 0; i < 32; i++) {\n    node += '00'\n  }\n\n  name = normalize(inputName)\n\n  if (name) {\n    var labels = name.split('.')\n\n    for(var i = labels.length - 1; i >= 0; i--) {\n      var labelSha = sha3(labels[i])\n      node = sha3(new Buffer(node + labelSha, 'hex'))\n    }\n  }\n\n  return '0x' + node\n}\n\nfunction normalize(name) {\n  return name ? uts46.toUnicode(name, {useStd3ASCII: true, transitional: false}) : name\n}\n\nexports.hash = namehash\nexports.normalize = normalize\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$idna_uts46_hx$uts46","~$module$node_modules$eth_ens_namehash$node_modules$js_sha3$src$sha3","~$shadow.js","~$module$node_modules$buffer$index"]],"~:properties",["^5",["normalize","useStd3ASCII","hash","transitional"]],"~:compiled-at",1644840880216,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$eth_ens_namehash$index.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,0CAAA,CAA+D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA0BvGC,QAASA,UAAS,CAACC,IAAD,CAAO,CACvB,MAAOA,KAAA,CAAOC,KAAMC,CAAAA,SAAN,CAAgBF,IAAhB,CAAsB,CAACG,aAAc,CAAA,CAAf,CAAqBC,aAAc,CAAA,CAAnC,CAAtB,CAAP,CAA0EJ,IAD1D,CAzBzB,IAAIK,OAAST,OAAA,CAAQ,kCAAR,CAAkBS,CAAAA,MAA/B,CACIC,KAAOV,OAAA,CAAQ,oEAAR,CAAmBW,CAAAA,UAD9B,CAEIN,MAAQL,OAAA,CAAQ,yCAAR,CA2BZE,QAAQU,CAAAA,IAAR,CAzBAC,QAAkB,CAACC,SAAD,CAAY,CAG5B,IADA,IAAIC,KAAO,EAAX,CACSC,EAAI,CAAb,CAAoB,EAApB,CAAgBA,CAAhB,CAAwBA,CAAA,EAAxB,CACED,IAAA,EAAQ,IAKV,IAFAX,IAEA,CAFOD,SAAA,CAAUW,SAAV,CAEP,CAGE,IAFIG,SAEA;AAFSb,IAAKc,CAAAA,KAAL,CAAW,GAAX,CAET,CAAIF,CAAJ,CAAQC,SAAOE,CAAAA,MAAf,CAAwB,CAA5B,CAAoC,CAApC,EAA+BH,CAA/B,CAAuCA,CAAA,EAAvC,CAA4C,CAC1C,IAAII,SAAWV,IAAA,CAAKO,SAAA,CAAOD,CAAP,CAAL,CACfD,KAAA,CAAOL,IAAA,CAAK,IAAID,MAAJ,CAAWM,IAAX,CAAkBK,QAAlB,CAA4B,KAA5B,CAAL,CAFmC,CAM9C,MAAO,IAAP,CAAcL,IAlBc,CA0B9Bb,QAAQC,CAAAA,SAAR,CAAoBA,SA/BmF;\",\n\"sources\":[\"node_modules/eth-ens-namehash/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$eth_ens_namehash$index\\\"] = function(global,require,module,exports) {\\nvar Buffer = require('buffer').Buffer;\\nvar sha3 = require('js-sha3').keccak_256\\nvar uts46 = require('idna-uts46-hx')\\n\\nfunction namehash (inputName) {\\n  // Reject empty names:\\n  var node = ''\\n  for (var i = 0; i < 32; i++) {\\n    node += '00'\\n  }\\n\\n  name = normalize(inputName)\\n\\n  if (name) {\\n    var labels = name.split('.')\\n\\n    for(var i = labels.length - 1; i >= 0; i--) {\\n      var labelSha = sha3(labels[i])\\n      node = sha3(new Buffer(node + labelSha, 'hex'))\\n    }\\n  }\\n\\n  return '0x' + node\\n}\\n\\nfunction normalize(name) {\\n  return name ? uts46.toUnicode(name, {useStd3ASCII: true, transitional: false}) : name\\n}\\n\\nexports.hash = namehash\\nexports.normalize = normalize\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"normalize\",\"name\",\"uts46\",\"toUnicode\",\"useStd3ASCII\",\"transitional\",\"Buffer\",\"sha3\",\"keccak_256\",\"hash\",\"namehash\",\"inputName\",\"node\",\"i\",\"labels\",\"split\",\"length\",\"labelSha\"]\n}\n"]