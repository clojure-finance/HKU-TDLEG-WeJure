["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@ethereumjs/tx/dist.browser/types.js"],"~:js","shadow$provide.module$node_modules$$ethereumjs$tx$dist_browser$types=function(global,require,module,exports){function isAccessListBuffer(input){return 0===input.length||Array.isArray(input[0])?!0:!1}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.N_DIV_2=exports.isAccessList=exports.isAccessListBuffer=exports.Capability=void 0;global=require(\"module$node_modules$ethereumjs_util$dist_browser$index\");(function(Capability){Capability[Capability.EIP155ReplayProtection=155]=\"EIP155ReplayProtection\";\nCapability[Capability.EIP1559FeeMarket=1559]=\"EIP1559FeeMarket\";Capability[Capability.EIP2718TypedTransaction=2718]=\"EIP2718TypedTransaction\";Capability[Capability.EIP2930AccessLists=2930]=\"EIP2930AccessLists\"})(exports.Capability||(exports.Capability={}));exports.isAccessListBuffer=isAccessListBuffer;exports.isAccessList=function(input){return!isAccessListBuffer(input)};exports.N_DIV_2=new global.BN(\"7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\",16)}","~:source","shadow$provide[\"module$node_modules$$ethereumjs$tx$dist_browser$types\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.N_DIV_2 = exports.isAccessList = exports.isAccessListBuffer = exports.Capability = void 0;\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nvar Capability;\n(function (Capability) {\n    /**\n     * Tx supports EIP-155 replay protection\n     * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n     */\n    Capability[Capability[\"EIP155ReplayProtection\"] = 155] = \"EIP155ReplayProtection\";\n    /**\n     * Tx supports EIP-1559 gas fee market mechansim\n     * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n     */\n    Capability[Capability[\"EIP1559FeeMarket\"] = 1559] = \"EIP1559FeeMarket\";\n    /**\n     * Tx is a typed transaction as defined in EIP-2718\n     * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n     */\n    Capability[Capability[\"EIP2718TypedTransaction\"] = 2718] = \"EIP2718TypedTransaction\";\n    /**\n     * Tx supports access list generation as defined in EIP-2930\n     * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n     */\n    Capability[Capability[\"EIP2930AccessLists\"] = 2930] = \"EIP2930AccessLists\";\n})(Capability = exports.Capability || (exports.Capability = {}));\nfunction isAccessListBuffer(input) {\n    if (input.length === 0) {\n        return true;\n    }\n    var firstItem = input[0];\n    if (Array.isArray(firstItem)) {\n        return true;\n    }\n    return false;\n}\nexports.isAccessListBuffer = isAccessListBuffer;\nfunction isAccessList(input) {\n    return !isAccessListBuffer(input); // This is exactly the same method, except the output is negated.\n}\nexports.isAccessList = isAccessList;\n/**\n * A const defining secp256k1n/2\n */\nexports.N_DIV_2 = new ethereumjs_util_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n//# sourceMappingURL=types.js.map\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$ethereumjs_util$dist_browser$index","~$shadow.js"]],"~:properties",["^5",["N_DIV_2","__esModule","value","Capability","isAccessListBuffer","isAccessList"]],"~:compiled-at",1644840880274,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$ethereumjs$tx$dist_browser$types.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,qDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgClHC,QAASA,mBAAkB,CAACC,KAAD,CAAQ,CAK/B,MAJqB,EAIrB,GAJIA,KAAMC,CAAAA,MAIV,EAAIC,KAAMC,CAAAA,OAAN,CADYH,KAAAI,CAAM,CAANA,CACZ,CAAJ,CACW,CAAA,CADX,CAGO,CAAA,CARwB,CA9BnCC,MAAOC,CAAAA,cAAP,CAAsBR,OAAtB,CAA+B,YAA/B,CAA6C,CAAES,MAAO,CAAA,CAAT,CAA7C,CACAT,QAAQU,CAAAA,OAAR,CAAkBV,OAAQW,CAAAA,YAA1B,CAAyCX,OAAQC,CAAAA,kBAAjD,CAAsED,OAAQY,CAAAA,UAA9E,CAA2F,IAAK,EAC5FC,OAAAA,CAAoBf,OAAA,CAAQ,wDAAR,CAMvB,UAAS,CAACc,UAAD,CAAa,CAKnBA,UAAA,CAAWA,UAAA,CAAA,sBAAX,CAAkD,GAAlD,CAAA,CAAyD,wBAKzDA;UAAA,CAAWA,UAAA,CAAA,gBAAX,CAA4C,IAA5C,CAAA,CAAoD,kBAKpDA,WAAA,CAAWA,UAAA,CAAA,uBAAX,CAAmD,IAAnD,CAAA,CAA2D,yBAK3DA,WAAA,CAAWA,UAAA,CAAA,kBAAX,CAA8C,IAA9C,CAAA,CAAsD,oBApBnC,CAAtB,CAAD,CAqBgBZ,OAAQY,CAAAA,UArBxB,GAqBuCZ,OAAQY,CAAAA,UArB/C,CAqB4D,EArB5D,EAgCAZ,QAAQC,CAAAA,kBAAR,CAA6BA,kBAI7BD,QAAQW,CAAAA,YAAR,CAHAA,QAAqB,CAACT,KAAD,CAAQ,CACzB,MAAO,CAACD,kBAAA,CAAmBC,KAAnB,CADiB,CAO7BF,QAAQU,CAAAA,OAAR,CAAkB,IAAIG,MAAkBC,CAAAA,EAAtB,CAAyB,kEAAzB,CAA6F,EAA7F,CAlDgG;\",\n\"sources\":[\"node_modules/@ethereumjs/tx/dist.browser/types.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$ethereumjs$tx$dist_browser$types\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\nObject.defineProperty(exports, \\\"__esModule\\\", { value: true });\\nexports.N_DIV_2 = exports.isAccessList = exports.isAccessListBuffer = exports.Capability = void 0;\\nvar ethereumjs_util_1 = require(\\\"ethereumjs-util\\\");\\n/**\\n * Can be used in conjunction with {@link Transaction.supports}\\n * to query on tx capabilities\\n */\\nvar Capability;\\n(function (Capability) {\\n    /**\\n     * Tx supports EIP-155 replay protection\\n     * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\\n     */\\n    Capability[Capability[\\\"EIP155ReplayProtection\\\"] = 155] = \\\"EIP155ReplayProtection\\\";\\n    /**\\n     * Tx supports EIP-1559 gas fee market mechansim\\n     * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\\n     */\\n    Capability[Capability[\\\"EIP1559FeeMarket\\\"] = 1559] = \\\"EIP1559FeeMarket\\\";\\n    /**\\n     * Tx is a typed transaction as defined in EIP-2718\\n     * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\\n     */\\n    Capability[Capability[\\\"EIP2718TypedTransaction\\\"] = 2718] = \\\"EIP2718TypedTransaction\\\";\\n    /**\\n     * Tx supports access list generation as defined in EIP-2930\\n     * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\\n     */\\n    Capability[Capability[\\\"EIP2930AccessLists\\\"] = 2930] = \\\"EIP2930AccessLists\\\";\\n})(Capability = exports.Capability || (exports.Capability = {}));\\nfunction isAccessListBuffer(input) {\\n    if (input.length === 0) {\\n        return true;\\n    }\\n    var firstItem = input[0];\\n    if (Array.isArray(firstItem)) {\\n        return true;\\n    }\\n    return false;\\n}\\nexports.isAccessListBuffer = isAccessListBuffer;\\nfunction isAccessList(input) {\\n    return !isAccessListBuffer(input); // This is exactly the same method, except the output is negated.\\n}\\nexports.isAccessList = isAccessList;\\n/**\\n * A const defining secp256k1n/2\\n */\\nexports.N_DIV_2 = new ethereumjs_util_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\\n//# sourceMappingURL=types.js.map\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"isAccessListBuffer\",\"input\",\"length\",\"Array\",\"isArray\",\"firstItem\",\"Object\",\"defineProperty\",\"value\",\"N_DIV_2\",\"isAccessList\",\"Capability\",\"ethereumjs_util_1\",\"BN\"]\n}\n"]