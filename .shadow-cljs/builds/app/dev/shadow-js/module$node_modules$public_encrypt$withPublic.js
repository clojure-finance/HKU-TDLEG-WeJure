["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/public-encrypt/withPublic.js"],"~:js","shadow$provide.module$node_modules$public_encrypt$withPublic=function(global,require,module,exports){var BN=require(\"module$node_modules$bn_DOT_js$lib$bn\"),Buffer=require(\"module$node_modules$safe_buffer$index\").Buffer;module.exports=function(paddedMsg,key){return Buffer.from(paddedMsg.toRed(BN.mont(key.modulus)).redPow(new BN(key.publicExponent)).fromRed().toArray())}}","~:source","shadow$provide[\"module$node_modules$public_encrypt$withPublic\"] = function(global,require,module,exports) {\nvar BN = require('bn.js')\nvar Buffer = require('safe-buffer').Buffer\n\nfunction withPublic (paddedMsg, key) {\n  return Buffer.from(paddedMsg\n    .toRed(BN.mont(key.modulus))\n    .redPow(new BN(key.publicExponent))\n    .fromRed()\n    .toArray())\n}\n\nmodule.exports = withPublic\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$safe_buffer$index","~$module$node_modules$bn_DOT_js$lib$bn"]],"~:properties",["^5",[]],"~:compiled-at",1644840880007,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$public_encrypt$withPublic.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,6CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC1G,IAAIC,GAAKH,OAAA,CAAQ,sCAAR,CAAT,CACII,OAASJ,OAAA,CAAQ,uCAAR,CAAuBI,CAAAA,MAUpCH,OAAOC,CAAAA,OAAP,CARAG,QAAoB,CAACC,SAAD,CAAYC,GAAZ,CAAiB,CACnC,MAAOH,OAAOI,CAAAA,IAAP,CAAYF,SAChBG,CAAAA,KADgB,CACVN,EAAGO,CAAAA,IAAH,CAAQH,GAAII,CAAAA,OAAZ,CADU,CAEhBC,CAAAA,MAFgB,CAET,IAAIT,EAAJ,CAAOI,GAAIM,CAAAA,cAAX,CAFS,CAGhBC,CAAAA,OAHgB,EAIhBC,CAAAA,OAJgB,EAAZ,CAD4B,CAJqE;\",\n\"sources\":[\"node_modules/public-encrypt/withPublic.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$public_encrypt$withPublic\\\"] = function(global,require,module,exports) {\\nvar BN = require('bn.js')\\nvar Buffer = require('safe-buffer').Buffer\\n\\nfunction withPublic (paddedMsg, key) {\\n  return Buffer.from(paddedMsg\\n    .toRed(BN.mont(key.modulus))\\n    .redPow(new BN(key.publicExponent))\\n    .fromRed()\\n    .toArray())\\n}\\n\\nmodule.exports = withPublic\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"BN\",\"Buffer\",\"withPublic\",\"paddedMsg\",\"key\",\"from\",\"toRed\",\"mont\",\"modulus\",\"redPow\",\"publicExponent\",\"fromRed\",\"toArray\"]\n}\n"]