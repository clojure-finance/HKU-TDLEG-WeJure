["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/utils/deepmerge.js"],"~:js","shadow$provide.module$node_modules$$mui$utils$deepmerge=function(global,require,module,exports){function isPlainObject(item){return null!==item&&\"object\"===typeof item&&item.constructor===Object}function deepmerge(target,source,options={clone:!0}){const output=options.clone?(0,_extends2.default)({},target):target;isPlainObject(target)&&isPlainObject(source)&&Object.keys(source).forEach(key=>{\"__proto__\"!==key&&(isPlainObject(source[key])&&key in target&&isPlainObject(target[key])?output[key]=deepmerge(target[key],\nsource[key],options):output[key]=source[key])});return output}global=require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=deepmerge;exports.isPlainObject=isPlainObject;var _extends2=global(require(\"module$node_modules$$babel$runtime$helpers$extends\"))}","~:source","shadow$provide[\"module$node_modules$$mui$utils$deepmerge\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = deepmerge;\nexports.isPlainObject = isPlainObject;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nfunction isPlainObject(item) {\n  return item !== null && typeof item === 'object' && item.constructor === Object;\n}\n\nfunction deepmerge(target, source, options = {\n  clone: true\n}) {\n  const output = options.clone ? (0, _extends2.default)({}, target) : target;\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n\n  return output;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$shadow.js","~$module$node_modules$$babel$runtime$helpers$extends"]],"~:properties",["^5",["__esModule","value","clone","isPlainObject","default"]],"~:compiled-at",1644840880427,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$utils$deepmerge.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAarGC,QAASA,cAAa,CAACC,IAAD,CAAO,CAC3B,MAAgB,KAAhB,GAAOA,IAAP,EAAwC,QAAxC,GAAwB,MAAOA,KAA/B,EAAoDA,IAAKC,CAAAA,WAAzD,GAAyEC,MAD9C,CAI7BC,QAASA,UAAS,CAACC,MAAD,CAASC,MAAT,CAAiBC,OAAA,CAAU,CAC3CC,MAAO,CAAA,CADoC,CAA3B,CAEf,CACD,MAAMC,OAASF,OAAQC,CAAAA,KAAR,CAAgB,GAAIE,SAAUC,CAAAA,OAAd,EAAuB,EAAvB,CAA2BN,MAA3B,CAAhB,CAAqDA,MAEhEL,cAAA,CAAcK,MAAd,CAAJ,EAA6BL,aAAA,CAAcM,MAAd,CAA7B,EACEH,MAAOS,CAAAA,IAAP,CAAYN,MAAZ,CAAoBO,CAAAA,OAApB,CAA4BC,GAAA,EAAO,CAErB,WAAZ,GAAIA,GAAJ,GAIId,aAAA,CAAcM,MAAA,CAAOQ,GAAP,CAAd,CAAJ,EAAkCA,GAAlC,GAAyCT,OAAzC,EAAmDL,aAAA,CAAcK,MAAA,CAAOS,GAAP,CAAd,CAAnD,CAEEL,MAAA,CAAOK,GAAP,CAFF,CAEgBV,SAAA,CAAUC,MAAA,CAAOS,GAAP,CAAV;AAAuBR,MAAA,CAAOQ,GAAP,CAAvB,CAAoCP,OAApC,CAFhB,CAIEE,MAAA,CAAOK,GAAP,CAJF,CAIgBR,MAAA,CAAOQ,GAAP,CARhB,CAFiC,CAAnC,CAeF,OAAOL,OAnBN,CAhBCM,MAAAA,CAAyBlB,OAAA,CAAQ,kEAAR,CAE7BM,OAAOa,CAAAA,cAAP,CAAsBjB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CkB,MAAO,CAAA,CADoC,CAA7C,CAGAlB,QAAQY,CAAAA,OAAR,CAAkBP,SAClBL,QAAQC,CAAAA,aAAR,CAAwBA,aAExB,KAAIU,UAAYK,MAAA,CAAuBlB,OAAA,CAAQ,oDAAR,CAAvB,CAXqF;\",\n\"sources\":[\"node_modules/@mui/utils/deepmerge.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$utils$deepmerge\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = deepmerge;\\nexports.isPlainObject = isPlainObject;\\n\\nvar _extends2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/extends\\\"));\\n\\nfunction isPlainObject(item) {\\n  return item !== null && typeof item === 'object' && item.constructor === Object;\\n}\\n\\nfunction deepmerge(target, source, options = {\\n  clone: true\\n}) {\\n  const output = options.clone ? (0, _extends2.default)({}, target) : target;\\n\\n  if (isPlainObject(target) && isPlainObject(source)) {\\n    Object.keys(source).forEach(key => {\\n      // Avoid prototype pollution\\n      if (key === '__proto__') {\\n        return;\\n      }\\n\\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\\n        output[key] = deepmerge(target[key], source[key], options);\\n      } else {\\n        output[key] = source[key];\\n      }\\n    });\\n  }\\n\\n  return output;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"isPlainObject\",\"item\",\"constructor\",\"Object\",\"deepmerge\",\"target\",\"source\",\"options\",\"clone\",\"output\",\"_extends2\",\"default\",\"keys\",\"forEach\",\"key\",\"_interopRequireDefault\",\"defineProperty\",\"value\"]\n}\n"]