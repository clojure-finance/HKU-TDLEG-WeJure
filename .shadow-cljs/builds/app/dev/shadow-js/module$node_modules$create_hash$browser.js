["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/create-hash/browser.js"],"~:js","shadow$provide.module$node_modules$create_hash$browser=function(global,require,module,exports){function Hash(hash){Base.call(this,\"digest\");this._hash=hash}global=require(\"module$node_modules$inherits$inherits_browser\");var MD5=require(\"module$node_modules$md5_DOT_js$index\"),RIPEMD160=require(\"module$node_modules$ripemd160$index\"),sha=require(\"module$node_modules$sha_DOT_js$index\"),Base=require(\"module$node_modules$cipher_base$index\");global(Hash,Base);Hash.prototype._update=function(data){this._hash.update(data)};\nHash.prototype._final=function(){return this._hash.digest()};module.exports=function(alg){alg=alg.toLowerCase();return\"md5\"===alg?new MD5:\"rmd160\"===alg||\"ripemd160\"===alg?new RIPEMD160:new Hash(sha(alg))}}","~:source","shadow$provide[\"module$node_modules$create_hash$browser\"] = function(global,require,module,exports) {\n'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$cipher_base$index","~$module$node_modules$md5_DOT_js$index","~$module$node_modules$sha_DOT_js$index","~$shadow.js","~$module$node_modules$inherits$inherits_browser","~$module$node_modules$ripemd160$index"]],"~:properties",["^5",["_hash","_final","_update"]],"~:compiled-at",1644840879902,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$create_hash$browser.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,uCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAQpGC,QAASA,KAAK,CAACC,IAAD,CAAO,CACnBC,IAAKC,CAAAA,IAAL,CAAU,IAAV,CAAgB,QAAhB,CAEA,KAAKC,CAAAA,KAAL,CAAaH,IAHM,CANjBI,MAAAA,CAAWR,OAAA,CAAQ,+CAAR,CACf,KAAIS,IAAMT,OAAA,CAAQ,sCAAR,CAAV,CACIU,UAAYV,OAAA,CAAQ,qCAAR,CADhB,CAEIW,IAAMX,OAAA,CAAQ,sCAAR,CAFV,CAGIK,KAAOL,OAAA,CAAQ,uCAAR,CAQXQ,OAAA,CAASL,IAAT,CAAeE,IAAf,CAEAF,KAAKS,CAAAA,SAAUC,CAAAA,OAAf,CAAyBC,QAAS,CAACC,IAAD,CAAO,CACvC,IAAKR,CAAAA,KAAMS,CAAAA,MAAX,CAAkBD,IAAlB,CADuC,CAIzCZ;IAAKS,CAAAA,SAAUK,CAAAA,MAAf,CAAwBC,QAAS,EAAG,CAClC,MAAO,KAAKX,CAAAA,KAAMY,CAAAA,MAAX,EAD2B,CAIpClB,OAAOC,CAAAA,OAAP,CAAiBkB,QAAoB,CAACC,GAAD,CAAM,CACzCA,GAAA,CAAMA,GAAIC,CAAAA,WAAJ,EACN,OAAY,KAAZ,GAAID,GAAJ,CAA0B,IAAIZ,GAA9B,CACY,QAAZ,GAAIY,GAAJ,EAAgC,WAAhC,GAAwBA,GAAxB,CAAoD,IAAIX,SAAxD,CAEO,IAAIP,IAAJ,CAASQ,GAAA,CAAIU,GAAJ,CAAT,CALkC,CAxByD;\",\n\"sources\":[\"node_modules/create-hash/browser.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$create_hash$browser\\\"] = function(global,require,module,exports) {\\n'use strict'\\nvar inherits = require('inherits')\\nvar MD5 = require('md5.js')\\nvar RIPEMD160 = require('ripemd160')\\nvar sha = require('sha.js')\\nvar Base = require('cipher-base')\\n\\nfunction Hash (hash) {\\n  Base.call(this, 'digest')\\n\\n  this._hash = hash\\n}\\n\\ninherits(Hash, Base)\\n\\nHash.prototype._update = function (data) {\\n  this._hash.update(data)\\n}\\n\\nHash.prototype._final = function () {\\n  return this._hash.digest()\\n}\\n\\nmodule.exports = function createHash (alg) {\\n  alg = alg.toLowerCase()\\n  if (alg === 'md5') return new MD5()\\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\\n\\n  return new Hash(sha(alg))\\n}\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Hash\",\"hash\",\"Base\",\"call\",\"_hash\",\"inherits\",\"MD5\",\"RIPEMD160\",\"sha\",\"prototype\",\"_update\",\"Hash.prototype._update\",\"data\",\"update\",\"_final\",\"Hash.prototype._final\",\"digest\",\"module.exports\",\"alg\",\"toLowerCase\"]\n}\n"]